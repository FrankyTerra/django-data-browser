{"version":3,"sources":["Util.js","Results.js","Query.js","Components.js","App.js","index.js"],"names":["assert","require","fetchInProgress","nextFetch","undefined","version","document","getElementById","textContent","trim","CopyText","props","text","ref","useRef","TLink","className","onClick","event","range","createRange","selectNodeContents","current","window","getSelection","removeAllRanges","addRange","execCommand","target","blur","children","type","SLink","AbortError","name","Error","doFetch","url","options","process","reject","Promise","resolve","fetch","then","response","next","res","err","ok","status","response_version","headers","get","console","log","location","reload","doGet","method","json","useData","useState","data","setData","useEffect","updates","prev","Cookies","body","JSON","stringify","doPatch","catch","e","Save","apiUrl","redirectUrl","saving","setSaving","doPost","to","Delete","state","setState","Overlay","message","Spacer","spaces","Array","map","_","key","HeadCell","query","field","modelField","getField","path","getType","removeField","canPivot","togglePivot","pivoted","concrete","defaultLookup","addFilter","prettyPath","toggleSort","join","dsc","priority","asc","null","sort","DataCell","formattedValue","span","value","dangerouslySetInnerHTML","__html","String","colSpan","VTableHeadRow","fields","classNameFirst","i","pathStr","VTableBodyRow","row","HTableRow","col","Results","cols","rows","overlay","colFields","rowFields","length","resFields","rowIndex","table","empty","filterErrors","getPartsForQuery","model","f","filters","lookup","limit","getUrlForQuery","baseUrl","media","query_str","basePath","origin","Query","config","setQuery","this","slice","allModelFields","types","lookups","defaultValue","newFields","filter","push","index","findIndex","newSort","newFilters","getDefaultLookupValue","splice","Number","defaultRowLimit","FilterValue","onChange","weekday","month","step","Filter","errorMessage","removeFilter","addField","setFilterLookup","sortedLookups","lookupName","replace","setFilterValue","React","Component","Filters","Field","toggled","toggle","bind","prettyName","AllFields","modelFields","getModelFields","sortedFields","fieldName","concat","ModelSelector","setModel","sortedModels","Logo","QueryPage","results","loading","error","setLimit","min","href","getUrlForMedia","view","pk","EditSavedView","canMakePublic","useParams","setView","link","placeholder","description","checked","public","public_link","google_sheets_formula","SavedViewList","savedViews","HomePage","QueryApp","popstate","booting","Sentry","fetchResults","handleError","fieldStr","queryStr","reqState","history","replaceState","addEventListener","removeEventListener","queryChange","newState","request","pushState","deepStrictEqual","handleQueryChange","Bob","useLocation","search","App","basename","id","parse","sentryDsn","dsn","release","attachStacktrace","maxValueLength","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6a9c820d.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport \"./App.css\";\nconst assert = require(\"assert\");\nlet fetchInProgress = false;\nlet nextFetch = undefined;\n\nconst version = document.getElementById(\"backend-version\").textContent.trim();\n\nfunction CopyText(props) {\n    const { text } = props;\n    const ref = useRef(null);\n    return (\n        <>\n            <span ref={ref}>{text}</span>{\" \"}\n            <TLink\n                className=\"CopyToClipboard\"\n                onClick={(event) => {\n                    const range = document.createRange();\n                    range.selectNodeContents(ref.current);\n                    window.getSelection().removeAllRanges();\n                    window.getSelection().addRange(range);\n                    document.execCommand(\"copy\");\n                    window.getSelection().removeAllRanges();\n                    event.target.blur();\n                }}\n            >\n                (copy to clipboard)\n            </TLink>\n        </>\n    );\n}\n\nfunction TLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button\n            {...{ onClick }}\n            type=\"button\"\n            className={\"Link \" + (className || \"\")}\n        >\n            {children}\n        </button>\n    );\n}\n\nfunction SLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button\n            {...{ onClick }}\n            type=\"button\"\n            className={\"sLink material-icons \" + (className || \"\")}\n        >\n            {children}\n        </button>\n    );\n}\n\nclass AbortError extends Error {\n    name = \"AbortError\";\n}\n\nfunction doFetch(url, options, process) {\n    if (fetchInProgress) {\n        if (nextFetch) {\n            nextFetch.reject(new AbortError(\"skipped\"));\n        }\n        return new Promise((resolve, reject) => {\n            nextFetch = { resolve, reject, url, options, process };\n        });\n    }\n\n    fetchInProgress = true;\n\n    return fetch(url, options)\n        .then((response) => {\n            // do we have a next fetch we need to trigger\n            const next = nextFetch;\n            nextFetch = undefined;\n            fetchInProgress = false;\n\n            if (next) {\n                doFetch(next.url, next.options, next.process).then(\n                    (res) => next.resolve(res),\n                    (err) => next.reject(err)\n                );\n                throw new AbortError(\"superceeded\");\n            } else {\n                return response;\n            }\n        })\n        .then((response) => {\n            // check status\n            assert.ok(response.status >= 200);\n            assert.ok(response.status < 300);\n            return response;\n        })\n        .then((response) => {\n            // check server version\n            const response_version = response.headers.get(\"x-version\");\n            if (response_version !== version) {\n                console.log(\n                    \"Version mismatch, hard reload\",\n                    version,\n                    response_version\n                );\n                window.location.reload(true);\n            }\n            return response;\n        })\n        .then((response) => process(response)); // process data\n}\n\nfunction doGet(url) {\n    return doFetch(url, { method: \"GET\" }, (response) => response.json());\n}\n\nfunction doDelete(url) {\n    return doFetch(\n        url,\n        {\n            method: \"DELETE\",\n            headers: { \"X-CSRFToken\": Cookies.get(\"csrftoken\") },\n        },\n        (response) => response\n    );\n}\n\nfunction doPatch(url, data) {\n    return doFetch(\n        url,\n        {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        },\n        (response) => response.json()\n    );\n}\n\nfunction doPost(url, data) {\n    return doFetch(\n        url,\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        },\n        (response) => response.json()\n    );\n}\n\nfunction useData(url) {\n    const [data, setData] = useState();\n    useEffect(() => {\n        doGet(url).then((response) => setData(response));\n    }, [url]);\n    return [\n        data,\n        (updates) => {\n            setData((prev) => ({ ...prev, ...updates }));\n            doPatch(url, updates)\n                .then((response) =>\n                    setData((prev) => ({ ...prev, ...response }))\n                )\n                .catch((e) => {\n                    if (e.name !== \"AbortError\") throw e;\n                });\n        },\n    ];\n}\n\nfunction Save(props) {\n    const { name, apiUrl, data, redirectUrl } = props;\n    const [saving, setSaving] = useState(\"save\");\n    if (saving === \"save\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setSaving(\"saving\");\n                    doPost(apiUrl, data).then((response) =>\n                        setSaving(response)\n                    );\n                }}\n            >\n                Save {name || \"\"}\n            </TLink>\n        );\n    else if (saving === \"saving\") return <>Saving {name || \"\"}</>;\n    else {\n        const url =\n            typeof redirectUrl === \"function\"\n                ? redirectUrl(saving)\n                : redirectUrl;\n        return <Redirect to={url} />;\n    }\n}\n\nfunction Delete(props) {\n    const { name, apiUrl, redirectUrl } = props;\n    const [state, setState] = useState(\"normal\");\n    if (state === \"normal\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setState(\"confirm\");\n                }}\n            >\n                Delete {name || \"\"}\n            </TLink>\n        );\n    else if (state === \"confirm\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setState(\"deleting\");\n                    doDelete(apiUrl).then((response) => setState(\"deleted\"));\n                }}\n            >\n                Are you sure?\n            </TLink>\n        );\n    else if (state === \"deleting\") return \"Deleting\";\n    else if (state === \"deleted\") return <Redirect to={redirectUrl} />;\n    else throw new Error(`unknown delete state: ${state}`);\n}\n\nfunction Overlay(props) {\n    if (!props.message) return null;\n    return (\n        <div className=\"Overlay\">\n            <h1>{props.message}</h1>\n        </div>\n    );\n}\n\nexport {\n    TLink,\n    SLink,\n    doPatch,\n    doGet,\n    doDelete,\n    doPost,\n    useData,\n    version,\n    Save,\n    Delete,\n    CopyText,\n    fetchInProgress,\n    Overlay,\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { TLink, SLink, Overlay } from \"./Util\";\n\nfunction Spacer(props) {\n  const { spaces } = props;\n  if (spaces > 0) {\n    return [...Array(spaces)].map((_, key) => (\n      <td className=\"Empty\" key={key} />\n    ));\n  }\n  return null;\n}\n\nfunction HeadCell(props) {\n  const { query, field, className } = props;\n  const modelField = query.getField(field.path);\n  const type = query.getType(modelField);\n  return (\n    <th {...{ className }}>\n      <SLink onClick={() => query.removeField(field)}>close</SLink>\n      {modelField.canPivot && (\n        <>\n          <SLink onClick={() => query.togglePivot(field)}>\n            {field.pivoted ? \"call_received\" : \"call_made\"}\n          </SLink>\n        </>\n      )}\n      {modelField.concrete && type.defaultLookup ? (\n        <>\n          <SLink onClick={() => query.addFilter(field.path, field.prettyPath)}>\n            filter_alt\n          </SLink>{\" \"}\n          <TLink onClick={() => query.toggleSort(field)}>\n            {field.prettyPath.join(\" \")}\n            {\n              {\n                dsc: `↑${field.priority}`,\n                asc: `↓${field.priority}`,\n                null: \"\",\n              }[field.sort]\n            }\n          </TLink>\n        </>\n      ) : (\n        \" \" + field.prettyPath.join(\" \")\n      )}\n    </th>\n  );\n}\n\nfunction DataCell(props) {\n  const { query, field, className, span, value } = props;\n  let modelField = query.getField(field.path);\n  let formattedValue;\n  if (value === undefined) {\n    formattedValue = \"\";\n  } else if (modelField.type === \"html\" && value) {\n    formattedValue = <div dangerouslySetInnerHTML={{ __html: value }} />;\n  } else {\n    formattedValue = String(value);\n  }\n  return (\n    <td className={modelField.type + \" \" + className || \"\"} colSpan={span || 1}>\n      {formattedValue}\n    </td>\n  );\n}\n\nfunction VTableHeadRow(props) {\n  const { fields, query, classNameFirst, className } = props;\n  return fields.map((field, i) => (\n    <HeadCell\n      {...{ query, field }}\n      key={field.pathStr}\n      className={`HoriBorder ${className} ` + (i ? \"\" : classNameFirst)}\n    />\n  ));\n}\n\nfunction VTableBodyRow(props) {\n  const { fields, query, classNameFirst, className, row } = props;\n  return fields.map((field, i) => (\n    <DataCell\n      {...{ query, field }}\n      key={field.pathStr}\n      value={row ? row[field.pathStr] : \"\"}\n      className={`${i ? \"\" : classNameFirst} ${className}`}\n    />\n  ));\n}\n\nfunction HTableRow(props) {\n  const { query, field, data, span, className } = props;\n  return (\n    <>\n      <HeadCell {...{ query, field }} />\n      {data.map((col, key) => (\n        <DataCell\n          {...{ key, query, field, span, className }}\n          value={col[field.pathStr]}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction Results(props) {\n  const { query, cols, rows, body, overlay } = props;\n  return (\n    <div className=\"Results\">\n      <Overlay message={overlay} />\n      <div className=\"Scroller\">\n        <table>\n          <thead>\n            {/* pivoted data */}\n            {query.colFields().map((field) => {\n              return (\n                <tr key={field.pathStr}>\n                  <Spacer spaces={query.rowFields().length - 1} />\n                  <HTableRow\n                    {...{ query, field }}\n                    span={query.resFields().length}\n                    data={cols}\n                    className={overlay && \"Fade\"}\n                  />\n                </tr>\n              );\n            })}\n\n            {/* column headers */}\n            <tr>\n              <Spacer spaces={1 - query.rowFields().length} />\n              <VTableHeadRow\n                {...{ query }}\n                fields={query.rowFields()}\n                className=\"Freeze\"\n              />\n              {cols.map((_, key) => (\n                <VTableHeadRow\n                  {...{ key, query }}\n                  fields={query.resFields()}\n                  classNameFirst=\"LeftBorder\"\n                  className=\"Freeze\"\n                />\n              ))}\n            </tr>\n          </thead>\n\n          {/* row headers and body */}\n          <tbody className={overlay && \"Fade\"}>\n            {rows.map((row, rowIndex) => (\n              <tr key={rowIndex}>\n                <Spacer spaces={1 - query.rowFields().length} />\n                <VTableBodyRow {...{ query, row }} fields={query.rowFields()} />\n                {body.map((table, key) => (\n                  <VTableBodyRow\n                    {...{ key, query }}\n                    fields={query.resFields()}\n                    row={table[rowIndex]}\n                    classNameFirst=\"LeftBorder\"\n                  />\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport { Results };\n","const empty = {\n  rows: [{}],\n  cols: [{}],\n  body: [[{}]],\n  length: 0,\n  filterErrors: [],\n};\n\nfunction getPartsForQuery(query) {\n  return {\n    model: query.model,\n    fields: query.fields\n      .map(\n        (f) =>\n          (f.pivoted ? \"&\" : \"\") +\n          f.path.join(\"__\") +\n          { asc: `+${f.priority}`, dsc: `-${f.priority}`, null: \"\" }[f.sort]\n      )\n      .join(\",\"),\n    query: query.filters\n      .map((f) => `${f.path.join(\"__\")}__${f.lookup}=${f.value}`)\n      .join(\"&\"),\n    limit: query.limit,\n  };\n}\n\nfunction getUrlForQuery(baseUrl, query, media) {\n  const { model, fields, query: query_str, limit } = getPartsForQuery(query);\n  const basePath = `${baseUrl}query/${model}`;\n  return `${window.location.origin}${basePath}/${fields}.${media}?${query_str}&limit=${limit}`;\n}\n\nclass Query {\n  constructor(config, query, setQuery) {\n    this.config = config;\n    this.query = query;\n    this.setQuery = setQuery;\n  }\n\n  getField(path) {\n    const field = path.slice(-1);\n    let model = this.query.model;\n    for (const field of path.slice(0, -1)) {\n      model = this.config.allModelFields[model].fields[field].model;\n    }\n    return this.config.allModelFields[model].fields[field];\n  }\n\n  getType(field) {\n    return this.config.types[field.type];\n  }\n\n  getModelFields(model) {\n    return this.config.allModelFields[model];\n  }\n\n  getDefaultLookupValue(type, lookup) {\n    return String(this.config.types[type.lookups[lookup].type].defaultValue);\n  }\n\n  addField(path, prettyPath) {\n    const newFields = this.query.fields.filter(\n      (f) => f.pathStr !== path.join(\"__\")\n    );\n    newFields.push({\n      path: path,\n      pathStr: path.join(\"__\"),\n      prettyPath: prettyPath,\n      sort: null,\n      priority: null,\n      pivoted: false,\n    });\n    this.setQuery({ fields: newFields });\n  }\n\n  removeField(field) {\n    this.setQuery({\n      fields: this.query.fields.filter((f) => f.pathStr !== field.pathStr),\n    });\n  }\n\n  toggleSort(field) {\n    const index = this.query.fields.findIndex(\n      (f) => f.pathStr === field.pathStr\n    );\n    const newSort = { asc: \"dsc\", dsc: null, null: \"asc\" }[field.sort];\n    let newFields = this.query.fields.slice();\n\n    if (field.sort) {\n      // move any later sort fields forward\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority:\n          f.priority != null && f.priority > field.priority\n            ? f.priority - 1\n            : f.priority,\n      }));\n    }\n\n    if (newSort) {\n      // move all other fiels back and insert the updated one\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority: f.priority != null ? f.priority + 1 : f.priority,\n      }));\n      newFields[index] = { ...field, sort: newSort, priority: 0 };\n    } else {\n      // blank the sort on the updated field\n      newFields[index] = { ...field, sort: null, priority: null };\n    }\n\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  togglePivot(field) {\n    const index = this.query.fields.findIndex(\n      (f) => f.pathStr === field.pathStr\n    );\n    let newFields = this.query.fields.slice();\n    newFields[index].pivoted = !newFields[index].pivoted;\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  addFilter(path, prettyPath) {\n    const type = this.getType(this.getField(path));\n    const newFilters = this.query.filters.slice();\n    newFilters.push({\n      path: path,\n      pathStr: path.join(\"__\"),\n      prettyPath: prettyPath,\n      lookup: type.defaultLookup,\n      value: this.getDefaultLookupValue(type, type.defaultLookup),\n    });\n    this.setQuery({ filters: newFilters });\n  }\n\n  removeFilter(index) {\n    const newFilters = this.query.filters.slice();\n    newFilters.splice(index, 1);\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterValue(index, value) {\n    const newFilters = this.query.filters.slice();\n    newFilters[index] = { ...newFilters[index], value: value };\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterLookup(index, lookup) {\n    const newFilters = this.query.filters.slice();\n    const filter = newFilters[index];\n    const type = this.getType(this.getField(newFilters[index].path));\n    if (type.lookups[filter.lookup].type !== type.lookups[lookup].type) {\n      filter.value = this.getDefaultLookupValue(type, lookup);\n    }\n    filter.lookup = lookup;\n    this.setQuery({ filters: newFilters });\n  }\n\n  setLimit(limit) {\n    limit = Number(limit);\n    this.setQuery({ limit: limit > 0 ? limit : 1 });\n  }\n\n  setModel(model) {\n    this.setQuery({\n      model: model,\n      fields: [],\n      filters: [],\n      limit: this.config.defaultRowLimit,\n      ...empty,\n    });\n  }\n\n  getUrlForMedia(media) {\n    return getUrlForQuery(this.config.baseUrl, this.query, media);\n  }\n\n  colFields() {\n    return this.query.fields.filter((f) => f.pivoted);\n  }\n\n  rowFields() {\n    if (this.colFields().length) {\n      return this.query.fields.filter(\n        (f) => !f.pivoted && this.getField(f.path).canPivot\n      );\n    } else {\n      return this.query.fields;\n    }\n  }\n\n  resFields() {\n    if (this.colFields().length) {\n      return this.query.fields.filter((f) => !this.getField(f.path).canPivot);\n    } else {\n      return [];\n    }\n  }\n}\n\nexport { Query, getPartsForQuery, getUrlForQuery, empty };\n","import React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { TLink, SLink, useData, version, Save, Delete, CopyText } from \"./Util\";\nimport { Results } from \"./Results\";\nimport { getPartsForQuery } from \"./Query\";\nimport \"./App.css\";\n\nfunction FilterValue(props) {\n  const { lookup, onChange, value } = props;\n  if (props.lookup.type === \"boolean\")\n    return (\n      <select {...{ onChange, value }} className=\"FilterValue\">\n        <option value={true}>true</option>\n        <option value={false}>false</option>\n      </select>\n    );\n  else if (lookup.type === \"weekday\")\n    return (\n      <select {...{ onChange, value }} className=\"FilterValue\">\n        {[\n          \"Sunday\",\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\",\n        ].map((weekday) => (\n          <option value={weekday}>{weekday}</option>\n        ))}\n      </select>\n    );\n  else if (lookup.type === \"month\")\n    return (\n      <select {...{ onChange, value }} className=\"FilterValue\">\n        {[\n          \"January\",\n          \"Febuary\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ].map((month) => (\n          <option value={month}>{month}</option>\n        ))}\n      </select>\n    );\n  else if (lookup.type === \"number\" || lookup.type === \"year\")\n    return (\n      <input\n        {...{ onChange, value }}\n        className=\"FilterValue\"\n        type=\"number\"\n        step=\"0\"\n      />\n    );\n  else\n    return (\n      <input {...{ onChange, value }} className=\"FilterValue\" type=\"text\" />\n    );\n}\n\nclass Filter extends React.Component {\n  render() {\n    const {\n      path,\n      prettyPath,\n      index,\n      lookup,\n      query,\n      value,\n      errorMessage,\n    } = this.props;\n    const type = query.getType(query.getField(path));\n    return (\n      <tr>\n        <td>\n          <SLink onClick={() => query.removeFilter(index)}>close</SLink>{\" \"}\n          <TLink onClick={() => query.addField(path, prettyPath)}>\n            {prettyPath.join(\" \")}\n          </TLink>{\" \"}\n        </td>\n        <td>\n          <select\n            className=\"Lookup\"\n            value={lookup}\n            onChange={(e) => query.setFilterLookup(index, e.target.value)}\n          >\n            {type.sortedLookups.map((lookupName) => (\n              <option key={lookupName} value={lookupName}>\n                {lookupName.replace(/_/g, \" \")}\n              </option>\n            ))}\n          </select>\n        </td>\n        <td>=</td>\n        <td>\n          <FilterValue\n            {...{ value }}\n            onChange={(e) => query.setFilterValue(index, e.target.value)}\n            lookup={type.lookups[lookup]}\n          />\n          {errorMessage && <p>{errorMessage}</p>}\n        </td>\n      </tr>\n    );\n  }\n}\n\nfunction Filters(props) {\n  const { query, filterErrors } = props;\n  return (\n    <form className=\"Filters\">\n      <table className=\"Flat\">\n        <tbody>\n          {props.filters.map((filter, index) => (\n            <Filter\n              {...{ query, index }}\n              {...filter}\n              key={index}\n              errorMessage={filterErrors[index]}\n            />\n          ))}\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nclass Field extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { toggled: false };\n  }\n\n  toggle() {\n    this.setState((state) => ({\n      toggled: !state.toggled,\n    }));\n  }\n\n  render() {\n    const { query, path, prettyPath, modelField } = this.props;\n    const type = query.getType(modelField);\n    return (\n      <>\n        <tr>\n          <td>\n            {modelField.concrete && type.defaultLookup && (\n              <SLink onClick={() => query.addFilter(path, prettyPath)}>\n                filter_alt\n              </SLink>\n            )}\n          </td>\n          <td>\n            {modelField.model && (\n              <SLink className=\"ToggleLink\" onClick={this.toggle.bind(this)}>\n                {this.state.toggled ? \"remove\" : \"add\"}\n              </SLink>\n            )}\n          </td>\n          <td>\n            {modelField.type ? (\n              <TLink onClick={() => query.addField(path, prettyPath)}>\n                {modelField.prettyName}\n              </TLink>\n            ) : (\n              modelField.prettyName\n            )}\n          </td>\n        </tr>\n        {this.state.toggled && (\n          <tr>\n            <td></td>\n            <td colSpan=\"2\">\n              <AllFields\n                {...{ query, path, prettyPath }}\n                model={modelField.model}\n              />\n            </td>\n          </tr>\n        )}\n      </>\n    );\n  }\n}\n\nfunction AllFields(props) {\n  const { query, model, path, prettyPath } = props;\n  const modelFields = query.getModelFields(model);\n  return (\n    <table>\n      <tbody>\n        {modelFields.sortedFields.map((fieldName) => {\n          const modelField = modelFields.fields[fieldName];\n          return (\n            <Field\n              key={fieldName}\n              {...{ query, modelField }}\n              path={path.concat([fieldName])}\n              prettyPath={prettyPath.concat([modelField.prettyName])}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nfunction ModelSelector(props) {\n  return (\n    <select\n      className=\"ModelSelector\"\n      onChange={(e) => props.query.setModel(e.target.value)}\n      value={props.model}\n    >\n      {props.sortedModels.map((model) => (\n        <option key={model}>{model}</option>\n      ))}\n    </select>\n  );\n}\n\nfunction Logo(props) {\n  return (\n    <Link to=\"/\" className=\"Logo\">\n      <span>DDB</span>\n      <span className=\"Version\">v{version}</span>\n    </Link>\n  );\n}\n\nfunction QueryPage(props) {\n  const {\n    query,\n    rows,\n    cols,\n    body,\n    length,\n    sortedModels,\n    model,\n    filters,\n    filterErrors,\n    baseUrl,\n    loading,\n    error,\n  } = props;\n\n  let overlay;\n  if (loading) overlay = \"Loading...\";\n  else if (error) overlay = \"Error\";\n\n  let results;\n  if (query.rowFields().length || query.colFields().length)\n    results = <Results {...{ query, rows, cols, body, overlay }} />;\n  else results = <h2>No fields selected</h2>;\n\n  return (\n    <>\n      <ModelSelector {...{ query, sortedModels, model }} />\n      <Filters {...{ query, filters, filterErrors }} />\n      <p>\n        Limit:{\" \"}\n        <input\n          className=\"RowLimit\"\n          type=\"number\"\n          value={query.query.limit}\n          onChange={(event) => {\n            query.setLimit(event.target.value);\n          }}\n          min=\"1\"\n        />{\" \"}\n        - Showing {length} results -{\" \"}\n        <a href={query.getUrlForMedia(\"csv\")}>Download as CSV</a> -{\" \"}\n        <a href={query.getUrlForMedia(\"json\")}>View as JSON</a> -{\" \"}\n        <Save\n          name=\"View\"\n          apiUrl={`${baseUrl}api/views/`}\n          data={getPartsForQuery(query.query)}\n          redirectUrl={(view) => `/views/${view.pk}.html`}\n        />\n      </p>\n      <div className=\"MainSpace\">\n        <div className=\"FieldsList\">\n          <AllFields {...{ query, model }} path={[]} prettyPath={[]} />\n        </div>\n        {results}\n        <div />\n      </div>\n    </>\n  );\n}\n\nfunction EditSavedView(props) {\n  const { canMakePublic, baseUrl } = props;\n  const { pk } = useParams();\n  const url = `${baseUrl}api/views/${pk}/`;\n  const [view, setView] = useData(url);\n  if (!view) return \"\";\n  return (\n    <div className=\"EditSavedView\">\n      <div className=\"SavedViewActions\">\n        <span className=\"SavedViewTitle\">Saved View</span>\n        <Link to={view.link}>Open</Link>\n      </div>\n      <form>\n        <input\n          type=\"text\"\n          value={view.name}\n          onChange={(event) => {\n            setView({ name: event.target.value });\n          }}\n          className=\"SavedViewName\"\n          placeholder=\"enter a name\"\n        />\n        <table>\n          <tbody>\n            <tr>\n              <th>Model:</th>\n              <td>{view.model}</td>\n            </tr>\n            <tr>\n              <th>Fields:</th>\n              <td>{view.fields}</td>\n            </tr>\n            <tr>\n              <th>Filters:</th>\n              <td>{view.query}</td>\n            </tr>\n            <tr>\n              <th>Limit:</th>\n              <td className=\"SavedViewLimit\">\n                <input\n                  className=\"RowLimit\"\n                  type=\"number\"\n                  value={view.limit}\n                  onChange={(event) => {\n                    setView({ limit: event.target.value });\n                  }}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <textarea\n          value={view.description}\n          onChange={(event) => {\n            setView({ description: event.target.value });\n          }}\n          placeholder=\"enter a description\"\n        />\n        {canMakePublic && (\n          <table>\n            <tbody>\n              <tr>\n                <th>Is Public:</th>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={view.public}\n                    onChange={(event) => {\n                      setView({ public: event.target.checked });\n                    }}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>Public link:</th>\n                <td>{view.public && <CopyText text={view.public_link} />}</td>\n              </tr>\n              <tr>\n                <th>Google Sheets:</th>\n                <td>\n                  {view.public && (\n                    <CopyText text={view.google_sheets_formula} />\n                  )}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        )}\n      </form>\n      <div className=\"SavedViewActions\">\n        <Delete apiUrl={url} redirectUrl=\"/\" />\n        <Link to=\"/\">Done</Link>\n      </div>\n    </div>\n  );\n}\n\nfunction SavedViewList(props) {\n  const { baseUrl } = props;\n  const [savedViews] = useData(`${baseUrl}api/views/`);\n  if (!savedViews) return \"\";\n  return (\n    <div>\n      <h1>Saved Views</h1>\n      <div>\n        {savedViews.map((view, index) => (\n          <div key={index}>\n            <p>\n              <Link className=\"Link\" to={view.link}>\n                {view.model} - {view.name}\n              </Link>{\" \"}\n              (<Link to={`/views/${view.pk}.html`}>edit</Link>)\n            </p>\n            <p>{view.description}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction HomePage(props) {\n  const { sortedModels, baseUrl } = props;\n  return (\n    <div className=\"Index\">\n      <div>\n        <h1>Models</h1>\n        <div>\n          {sortedModels.map((model) => (\n            <div key={model}>\n              <Link to={`/query/${model}/.html`} className=\"Link\">\n                {model}\n              </Link>\n            </div>\n          ))}\n        </div>\n      </div>\n      <SavedViewList {...{ baseUrl }} />\n    </div>\n  );\n}\n\nexport { HomePage, QueryPage, Logo, EditSavedView };\n","import * as Sentry from \"@sentry/browser\";\nimport React from \"react\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  useParams,\n  useLocation,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { HomePage, QueryPage, Logo, EditSavedView } from \"./Components\";\nimport { Query, getUrlForQuery, empty } from \"./Query\";\nimport { doGet, fetchInProgress } from \"./Util\";\n\nconst assert = require(\"assert\");\n\nclass QueryApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      booting: true,\n      loading: false,\n      error: undefined,\n      model: \"\",\n      fields: [],\n      filters: [],\n      limit: props.config.defaultRowLimit,\n      ...empty,\n    };\n  }\n\n  handleError(e) {\n    if (e.name !== \"AbortError\") {\n      this.setState({ error: true, loading: false });\n      console.log(e);\n      Sentry.captureException(e);\n    }\n  }\n\n  fetchResults(state) {\n    this.setState({ loading: true });\n    const url = getUrlForQuery(this.props.config.baseUrl, state, \"json\");\n\n    return doGet(url).then((response) => {\n      this.setState({\n        body: response.body,\n        cols: response.cols,\n        rows: response.rows,\n        length: response.length,\n        filterErrors: response.filterErrors,\n        loading: fetchInProgress,\n        error: undefined,\n      });\n      return response;\n    });\n  }\n\n  popstate(e) {\n    this.setState(e.state);\n    this.fetchResults(e.state).catch(this.handleError.bind(this));\n  }\n  popstate = this.popstate.bind(this);\n\n  componentDidMount() {\n    const { model, fieldStr, queryStr, config } = this.props;\n    const url = `${config.baseUrl}query/${model}/${fieldStr}.query${queryStr}`;\n    doGet(url).then((response) => {\n      const reqState = {\n        booting: false,\n        loading: true,\n        error: undefined,\n        model: response.model,\n        fields: response.fields,\n        filters: response.filters,\n        limit: response.limit,\n        ...empty,\n      };\n      this.setState(reqState);\n      window.history.replaceState(\n        reqState,\n        null,\n        getUrlForQuery(this.props.config.baseUrl, reqState, \"html\")\n      );\n      window.addEventListener(\"popstate\", this.popstate);\n      this.fetchResults(this.state).catch(this.handleError.bind(this));\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"popstate\", this.popstate);\n  }\n\n  handleQueryChange(queryChange) {\n    this.setState(queryChange);\n    const newState = { ...this.state, ...queryChange };\n    const request = {\n      model: newState.model,\n      fields: newState.fields,\n      filters: newState.filters,\n      limit: newState.limit,\n      ...empty,\n    };\n    window.history.pushState(\n      request,\n      null,\n      getUrlForQuery(this.props.config.baseUrl, newState, \"html\")\n    );\n    this.fetchResults(newState)\n      .then((response) => {\n        response = { ...response, ...empty };\n        assert.deepStrictEqual(response, request);\n      })\n      .catch(this.handleError.bind(this));\n  }\n\n  render() {\n    if (this.state.booting) return \"\";\n    const query = new Query(\n      this.props.config,\n      this.state,\n      this.handleQueryChange.bind(this)\n    );\n    return (\n      <QueryPage\n        query={query}\n        sortedModels={this.props.config.sortedModels}\n        baseUrl={this.props.config.baseUrl}\n        {...this.state}\n      />\n    );\n  }\n}\n\nfunction Bob(props) {\n  const { model, fieldStr } = useParams();\n  return (\n    <QueryApp\n      {...props}\n      model={model}\n      fieldStr={fieldStr || \"\"}\n      queryStr={useLocation().search}\n    />\n  );\n}\n\nfunction App(props) {\n  const { baseUrl, sortedModels, canMakePublic } = props;\n  return (\n    <BrowserRouter basename={baseUrl}>\n      <Logo />\n      <div id=\"body\">\n        <Switch>\n          <Route path=\"/query/:model/:fieldStr?.html\">\n            <Bob config={props} {...{ sortedModels }} />\n          </Route>\n          <Route path=\"/views/:pk.html\">\n            <EditSavedView {...{ baseUrl, canMakePublic }} />\n          </Route>\n          <Route path=\"/\">\n            <HomePage {...{ sortedModels, baseUrl }} />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst config = JSON.parse(\n    document.getElementById(\"backend-config\").textContent\n);\nconst version = document.getElementById(\"backend-version\").textContent.trim();\n\nif (config.sentryDsn) {\n    Sentry.init({\n        dsn: config.sentryDsn,\n        release: version,\n        attachStacktrace: true,\n        maxValueLength: 10000,\n    });\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App {...config} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}