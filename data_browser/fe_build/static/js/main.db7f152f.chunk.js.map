{"version":3,"sources":["Util.js","Results.js","Query.js","Components.js","App.js","index.js"],"names":["controller","fetchDescription","version","document","getElementById","textContent","trim","CopyText","props","text","ref","useRef","TLink","className","onClick","event","range","createRange","selectNodeContents","current","window","getSelection","removeAllRanges","addRange","execCommand","target","blur","children","type","SLink","doFetch","url","options","process","abort","AbortController","method","fetch","signal","then","response","response_version","headers","get","console","log","location","reload","catch","e","name","doGet","json","useData","useState","data","setData","useEffect","updates","prev","Cookies","body","JSON","stringify","doPatch","Save","apiUrl","redirectUrl","saving","setSaving","doPost","to","Delete","state","setState","Error","Spacer","spaces","Array","map","_","key","HeadCell","query","field","modelField","getField","path","getType","removeField","canPivot","togglePivot","pivoted","concrete","defaultLookup","addFilter","prettyPath","toggleSort","join","dsc","priority","asc","null","sort","DataCell","formattedValue","span","value","undefined","dangerouslySetInnerHTML","__html","String","colSpan","VTableHeadRow","fields","classNameFirst","i","pathStr","VTableBodyRow","row","HTableRow","col","Results","cols","rows","colFields","rowFields","length","resFields","rowIndex","table","empty","filterErrors","getPartsForQuery","model","f","filters","lookup","getUrlForQuery","baseUrl","media","parts","basePath","origin","Query","config","setQuery","this","slice","allModelFields","types","lookups","defaultValue","newFields","push","filter","index","findIndex","newSort","newFilters","getDefaultLookupValue","splice","FilterValue","onChange","weekday","month","step","Filter","errorMessage","removeFilter","addField","setFilterLookup","sortedLookups","lookupName","replace","setFilterValue","React","Component","Filters","Field","toggled","toggle","bind","prettyName","AllFields","modelFields","getModelFields","sortedFields","fieldName","concat","ModelSelector","setModel","sortedModels","Logo","QueryPage","href","getUrlForMedia","view","pk","EditSavedView","canMakePublic","useParams","setView","link","placeholder","description","checked","public","public_link","google_sheets_formula","SavedViewList","savedViews","HomePage","assert","require","handleError","Sentry","QueryApp","booting","fieldStr","queryStr","reqState","history","replaceState","onpopstate","fetchResults","queryChange","newState","request","pushState","deepStrictEqual","handleQueryChange","Bob","useLocation","search","App","basename","id","parse","sentryDsn","dsn","release","attachStacktrace","maxValueLength","ReactDOM","render","StrictMode"],"mappings":"8LAIIA,EACAC,E,+IAEEC,EAAUC,SAASC,eAAe,mBAAmBC,YAAYC,OAEvE,SAASC,EAASC,GAAQ,IACdC,EAASD,EAATC,KACFC,EAAMC,iBAAO,MACnB,OACI,oCACI,0BAAMD,IAAKA,GAAMD,GAAa,IAC9B,kBAACG,EAAD,CACIC,UAAU,kBACVC,QAAS,SAACC,GACN,IAAMC,EAAQb,SAASc,cACvBD,EAAME,mBAAmBR,EAAIS,SAC7BC,OAAOC,eAAeC,kBACtBF,OAAOC,eAAeE,SAASP,GAC/Bb,SAASqB,YAAY,QACrBJ,OAAOC,eAAeC,kBACtBP,EAAMU,OAAOC,SATrB,wBAkBZ,SAASd,EAAMJ,GAAQ,IACXK,EAAiCL,EAAjCK,UAAWC,EAAsBN,EAAtBM,QAASa,EAAanB,EAAbmB,SAC5B,OACI,yCACQ,CAAEb,WADV,CAEIc,KAAK,SACLf,UAAW,SAAWA,GAAa,MAElCc,GAKb,SAASE,EAAMrB,GAAQ,IACXK,EAAiCL,EAAjCK,UAAWC,EAAsBN,EAAtBM,QAASa,EAAanB,EAAbmB,SAC5B,OACI,yCACQ,CAAEb,WADV,CAEIc,KAAK,SACLf,UAAW,yBAA2BA,GAAa,MAElDc,GAKb,SAASG,EAAQC,EAAKC,EAASC,GAI3B,OAHIjC,GAAYA,EAAWkC,QAC3BlC,EAAa,IAAImC,gBACjBlC,EAAgB,UAAM+B,EAAQI,OAAd,YAAwBL,GACjCM,MAAMN,EAAD,aAAQO,OAAQtC,EAAWsC,QAAWN,IAC7CO,MAAK,SAACC,GACH,IAAMC,EAAmBD,EAASE,QAAQC,IAAI,aAS9C,OARIF,IAAqBvC,IACrB0C,QAAQC,IACJ,gCACA3C,EACAuC,GAEJrB,OAAO0B,SAASC,QAAO,IAEpBP,KAEVD,MAAK,SAACC,GAAD,OAAcP,EAAQO,MAC3BQ,OAAM,SAACC,GACJ,GAAe,eAAXA,EAAEC,KAIF,MAAMD,EAHNL,QAAQC,IAAI,kBAAmB5C,MAQ/C,SAASkD,EAAMpB,GACX,OAAOD,EAAQC,EAAK,CAAEK,OAAQ,QAAS,SAACI,GAAD,OAAcA,EAASY,UA4ClE,SAASC,EAAQtB,GAAM,IAAD,EACMuB,qBADN,mBACXC,EADW,KACLC,EADK,KAKlB,OAHAC,qBAAU,WACNN,EAAMpB,GAAKQ,MAAK,SAACC,GAAD,OAAcgB,EAAQhB,QACvC,CAACT,IACG,CACHwB,EACA,SAACG,GACGF,GAAQ,SAACG,GAAD,sBAAgBA,EAAhB,GAAyBD,MAtC7C,SAAiB3B,EAAKwB,GAClB,OAAOzB,EACHC,EACA,CACIK,OAAQ,QACRM,QAAS,CACL,eAAgB,mBAChB,cAAekB,IAAQjB,IAAI,cAE/BkB,KAAMC,KAAKC,UAAUR,KAEzB,SAACf,GAAD,OAAcA,EAASY,UA4BnBY,CAAQjC,EAAK2B,GAASnB,MAClB,SAACC,GAAD,OACIA,GAAYgB,GAAQ,SAACG,GAAD,sBAAgBA,EAAhB,GAAyBnB,WAMjE,SAASyB,EAAKzD,GAAQ,IACV0C,EAAoC1C,EAApC0C,KAAMgB,EAA8B1D,EAA9B0D,OAAQX,EAAsB/C,EAAtB+C,KAAMY,EAAgB3D,EAAhB2D,YADX,EAEWb,mBAAS,QAFpB,mBAEVc,EAFU,KAEFC,EAFE,KAGjB,GAAe,SAAXD,EACA,OACI,kBAACxD,EAAD,CACIE,QAAS,SAACC,GACNsD,EAAU,UAvC9B,SAAgBtC,EAAKwB,GACjB,OAAOzB,EACHC,EACA,CACIK,OAAQ,OACRM,QAAS,CACL,eAAgB,mBAChB,cAAekB,IAAQjB,IAAI,cAE/BkB,KAAMC,KAAKC,UAAUR,KAEzB,SAACf,GAAD,OAAcA,EAASY,UA6BXkB,CAAOJ,EAAQX,GAAMhB,MAAK,SAACC,GAAD,OACtB6B,EAAU7B,QAJtB,QAQUU,GAAQ,IAGrB,GAAe,WAAXkB,EAAqB,OAAO,8CAAUlB,GAAQ,IAEnD,IAAMnB,EACqB,oBAAhBoC,EACDA,EAAYC,GACZD,EACV,OAAO,kBAAC,IAAD,CAAUI,GAAIxC,IAI7B,SAASyC,EAAOhE,GAAQ,IACZ0C,EAA8B1C,EAA9B0C,KAAMgB,EAAwB1D,EAAxB0D,OAAQC,EAAgB3D,EAAhB2D,YADH,EAEOb,mBAAS,UAFhB,mBAEZmB,EAFY,KAELC,EAFK,KAGnB,GAAc,WAAVD,EACA,OACI,kBAAC7D,EAAD,CACIE,QAAS,SAACC,GACN2D,EAAS,aAFjB,UAKYxB,GAAQ,IAGvB,GAAc,YAAVuB,EACL,OACI,kBAAC7D,EAAD,CACIE,QAAS,SAACC,GApG1B,IAAkBgB,EAqGE2C,EAAS,aArGX3C,EAsGWmC,EArGlBpC,EACHC,EACA,CACIK,OAAQ,SACRM,QAAS,CAAE,cAAekB,IAAQjB,IAAI,gBAE1C,SAACH,GAAD,OAAcA,MA+FeD,MAAK,SAACC,GAAD,OAAckC,EAAS,gBAHrD,iBASH,GAAc,aAAVD,EAAsB,MAAO,WACjC,GAAc,YAAVA,EAAqB,OAAO,kBAAC,IAAD,CAAUF,GAAIJ,IAC9C,MAAM,IAAIQ,MAAJ,gCAAmCF,I,YCrMlD,SAASG,EAAOpE,GAAQ,IACdqE,EAAWrE,EAAXqE,OACR,OAAIA,EAAS,EACJ,YAAIC,MAAMD,IAASE,KAAI,SAACC,EAAGC,GAAJ,OAC5B,wBAAIpE,UAAU,QAAQoE,IAAKA,OAGxB,KAGT,SAASC,EAAS1E,GAAQ,IAChB2E,EAA4B3E,EAA5B2E,MAAOC,EAAqB5E,EAArB4E,MAAOvE,EAAcL,EAAdK,UAChBwE,EAAaF,EAAMG,SAASF,EAAMG,MAClC3D,EAAOuD,EAAMK,QAAQH,GAC3B,OACE,uBAAQ,CAAExE,aACR,kBAACgB,EAAD,CAAOf,QAAS,kBAAMqE,EAAMM,YAAYL,KAAxC,SACCC,EAAWK,UACV,oCACE,kBAAC7D,EAAD,CAAOf,QAAS,kBAAMqE,EAAMQ,YAAYP,KACrCA,EAAMQ,QAAU,gBAAkB,cAIxCP,EAAWQ,UAAYjE,EAAKkE,cAC3B,oCACE,kBAACjE,EAAD,CAAOf,QAAS,kBAAMqE,EAAMY,UAAUX,EAAMG,KAAMH,EAAMY,cAAxD,cAES,IACT,kBAACpF,EAAD,CAAOE,QAAS,kBAAMqE,EAAMc,WAAWb,KACpCA,EAAMY,WAAWE,KAAK,KAErB,CACEC,IAAI,SAAD,OAAMf,EAAMgB,UACfC,IAAI,SAAD,OAAMjB,EAAMgB,UACfE,KAAM,IACNlB,EAAMmB,QAKd,IAAMnB,EAAMY,WAAWE,KAAK,MAMpC,SAASM,EAAShG,GAAQ,IAGpBiG,EAFItB,EAAyC3E,EAAzC2E,MAAOC,EAAkC5E,EAAlC4E,MAAOvE,EAA2BL,EAA3BK,UAAW6F,EAAgBlG,EAAhBkG,KAAMC,EAAUnG,EAAVmG,MACnCtB,EAAaF,EAAMG,SAASF,EAAMG,MAStC,OANEkB,OADYG,IAAVD,EACe,GACY,SAApBtB,EAAWzD,MAAmB+E,EACtB,yBAAKE,wBAAyB,CAAEC,OAAQH,KAExCI,OAAOJ,GAGxB,wBAAI9F,UAAWwE,EAAWzD,KAAO,IAAMf,GAAa,GAAImG,QAASN,GAAQ,GACtED,GAKP,SAASQ,EAAczG,GAAQ,IACrB0G,EAAkC1G,EAAlC0G,OAAQ/B,EAA0B3E,EAA1B2E,MAAOgC,EAAmB3G,EAAnB2G,eACvB,OAAOD,EAAOnC,KAAI,SAACK,EAAOgC,GAAR,OAChB,kBAAClC,EAAD,cACM,CAAEC,QAAOC,SADf,CAEEH,IAAKG,EAAMiC,QACXxG,UAAW,eAAiBuG,EAAI,GAAKD,SAK3C,SAASG,EAAc9G,GAAQ,IACrB0G,EAAuC1G,EAAvC0G,OAAQ/B,EAA+B3E,EAA/B2E,MAAOgC,EAAwB3G,EAAxB2G,eAAgBI,EAAQ/G,EAAR+G,IACvC,OAAOL,EAAOnC,KAAI,SAACK,EAAOgC,GAAR,OAChB,kBAACZ,EAAD,cACM,CAAErB,QAAOC,SADf,CAEEH,IAAKG,EAAMiC,QACXV,MAAOY,EAAInC,EAAMiC,SACjBxG,UAAWuG,EAAI,GAAKD,QAK1B,SAASK,EAAUhH,GAAQ,IACjB2E,EAA6B3E,EAA7B2E,MAAOC,EAAsB5E,EAAtB4E,MAAO7B,EAAe/C,EAAf+C,KAAMmD,EAASlG,EAATkG,KAC5B,OACE,oCACE,kBAACxB,EAAa,CAAEC,QAAOC,UACtB7B,EAAKwB,KAAI,SAAC0C,EAAKxC,GAAN,OACR,kBAACuB,EAAD,cAAc,CAAEvB,MAAKE,QAAOC,QAAOsB,QAAnC,CAA2CC,MAAOc,EAAIrC,EAAMiC,gBAMpE,SAASK,EAAQlH,GAAQ,IACf2E,EAA4B3E,EAA5B2E,MAAOwC,EAAqBnH,EAArBmH,KAAMC,EAAepH,EAAfoH,KAAM/D,EAASrD,EAATqD,KAC3B,OACE,2BAAOhD,UAAU,WACf,+BAEGsE,EAAM0C,YAAY9C,KAAI,SAACK,GACtB,OACE,wBAAIH,IAAKG,EAAMiC,SACb,kBAACzC,EAAD,CAAQC,OAAQM,EAAM2C,YAAYC,OAAS,IAC3C,kBAACP,EAAD,cACM,CAAErC,QAAOC,SADf,CAEEsB,KAAMvB,EAAM6C,YAAYD,OACxBxE,KAAMoE,SAOd,4BACE,kBAAC/C,EAAD,CAAQC,OAAQ,EAAIM,EAAM2C,YAAYC,SACtC,kBAACd,EAAD,cAAmB,CAAE9B,SAArB,CAA8B+B,OAAQ/B,EAAM2C,eAC3CH,EAAK5C,KAAI,SAACC,EAAGC,GAAJ,OACR,kBAACgC,EAAD,cACM,CAAEhC,MAAKE,SADb,CAEE+B,OAAQ/B,EAAM6C,YACdb,eAAe,qBAOvB,+BACGS,EAAK7C,KAAI,SAACwC,EAAKU,GAAN,OACR,wBAAIhD,IAAKgD,GACP,kBAACrD,EAAD,CAAQC,OAAQ,EAAIM,EAAM2C,YAAYC,SACtC,kBAACT,EAAD,cAAmB,CAAEnC,QAAOoC,OAA5B,CAAmCL,OAAQ/B,EAAM2C,eAChDjE,EAAKkB,KAAI,SAACmD,EAAOjD,GAAR,OACR,kBAACqC,EAAD,cACM,CAAErC,MAAKE,SADb,CAEE+B,OAAQ/B,EAAM6C,YACdT,IAAKW,EAAMD,GACXd,eAAe,yB,YCpJzBgB,EAAQ,CACZP,KAAM,CAAC,IACPD,KAAM,CAAC,IACP9D,KAAM,CAAC,CAAC,KACRuE,aAAc,IAGhB,SAASC,EAAiBlD,GACxB,MAAO,CACLmD,MAAOnD,EAAMmD,MACbpB,OAAQ/B,EAAM+B,OACXnC,KACC,SAACwD,GAAD,OACGA,EAAE3C,QAAU,IAAM,IACnB2C,EAAEhD,KAAKW,KAAK,MACZ,CAAEG,IAAI,IAAD,OAAMkC,EAAEnC,UAAYD,IAAI,IAAD,OAAMoC,EAAEnC,UAAYE,KAAM,IAAKiC,EAAEhC,SAEhEL,KAAK,KACRf,MAAOA,EAAMqD,QACVzD,KAAI,SAACwD,GAAD,gBAAUA,EAAEhD,KAAKW,KAAK,MAAtB,aAAgCqC,EAAEE,OAAlC,YAA4CF,EAAE5B,UAClDT,KAAK,MAIZ,SAASwC,EAAeC,EAASxD,EAAOyD,GACtC,IAAMC,EAAQR,EAAiBlD,GACzB2D,EAAQ,UAAMH,EAAN,iBAAsBE,EAAMP,OAC1C,MAAM,GAAN,OAAUlH,OAAO0B,SAASiG,QAA1B,OAAmCD,EAAnC,YAA+CD,EAAM3B,OAArD,YAA+D0B,EAA/D,YAAwEC,EAAM1D,O,IAG1E6D,E,WACJ,WAAYC,EAAQ9D,EAAO+D,GAAW,oBACpCC,KAAKF,OAASA,EACdE,KAAKhE,MAAQA,EACbgE,KAAKD,SAAWA,E,qDAGT3D,GACP,IADa,EACPH,EAAQG,EAAK6D,OAAO,GACtBd,EAAQa,KAAKhE,MAAMmD,MAFV,cAGO/C,EAAK6D,MAAM,GAAI,IAHtB,IAGb,2BAAuC,CAAC,IAA7BhE,EAA4B,QACrCkD,EAAQa,KAAKF,OAAOI,eAAef,GAAOpB,OAAO9B,GAAOkD,OAJ7C,8BAMb,OAAOa,KAAKF,OAAOI,eAAef,GAAOpB,OAAO9B,K,8BAG1CA,GACN,OAAO+D,KAAKF,OAAOK,MAAMlE,EAAMxD,Q,qCAGlB0G,GACb,OAAOa,KAAKF,OAAOI,eAAef,K,4CAGd1G,EAAM6G,GAC1B,OAAO1B,OAAOoC,KAAKF,OAAOK,MAAM1H,EAAK2H,QAAQd,GAAQ7G,MAAM4H,gB,+BAGpDjE,EAAMS,GACb,IAAMyD,EAAYN,KAAKhE,MAAM+B,OAAOkC,QACpCK,EAAUC,KAAK,CACbnE,KAAMA,EACN8B,QAAS9B,EAAKW,KAAK,MACnBF,WAAYA,EACZO,KAAM,KACNH,SAAU,KACVR,SAAS,IAEXuD,KAAKD,SAAS,CAAEhC,OAAQuC,M,kCAGdrE,GACV+D,KAAKD,SAAS,CACZhC,OAAQiC,KAAKhE,MAAM+B,OAAOyC,QAAO,SAACpB,GAAD,OAAOA,EAAElB,UAAYjC,EAAMiC,e,iCAIrDjC,GACT,IAAMwE,EAAQT,KAAKhE,MAAM+B,OAAO2C,WAC9B,SAACtB,GAAD,OAAOA,EAAElB,UAAYjC,EAAMiC,WAEvByC,EAAU,CAAEzD,IAAK,MAAOF,IAAK,KAAMG,KAAM,OAAQlB,EAAMmB,MACzDkD,EAAYN,KAAKhE,MAAM+B,OAAOkC,QAE9BhE,EAAMmB,OAERkD,EAAYA,EAAU1E,KAAI,SAACwD,GAAD,sBACrBA,EADqB,CAExBnC,SACgB,MAAdmC,EAAEnC,UAAoBmC,EAAEnC,SAAWhB,EAAMgB,SACrCmC,EAAEnC,SAAW,EACbmC,EAAEnC,eAIR0D,GAEFL,EAAYA,EAAU1E,KAAI,SAACwD,GAAD,sBACrBA,EADqB,CAExBnC,SAAwB,MAAdmC,EAAEnC,SAAmBmC,EAAEnC,SAAW,EAAImC,EAAEnC,eAE1CwD,GAAV,eAAwBxE,EAAxB,CAA+BmB,KAAMuD,EAAS1D,SAAU,IAGxDqD,EAAUG,GAAV,eAAwBxE,EAAxB,CAA+BmB,KAAM,KAAMH,SAAU,OAGvD+C,KAAKD,SAAS,CACZhC,OAAQuC,M,kCAIArE,GACV,IAAMwE,EAAQT,KAAKhE,MAAM+B,OAAO2C,WAC9B,SAACtB,GAAD,OAAOA,EAAElB,UAAYjC,EAAMiC,WAEzBoC,EAAYN,KAAKhE,MAAM+B,OAAOkC,QAClCK,EAAUG,GAAOhE,SAAW6D,EAAUG,GAAOhE,QAC7CuD,KAAKD,SAAS,CACZhC,OAAQuC,M,gCAIFlE,EAAMS,GACd,IAAMpE,EAAOuH,KAAK3D,QAAQ2D,KAAK7D,SAASC,IAClCwE,EAAaZ,KAAKhE,MAAMqD,QAAQY,QACtCW,EAAWL,KAAK,CACdnE,KAAMA,EACN8B,QAAS9B,EAAKW,KAAK,MACnBF,WAAYA,EACZyC,OAAQ7G,EAAKkE,cACba,MAAOwC,KAAKa,sBAAsBpI,EAAMA,EAAKkE,iBAE/CqD,KAAKD,SAAS,CAAEV,QAASuB,M,mCAGdH,GACX,IAAMG,EAAaZ,KAAKhE,MAAMqD,QAAQY,QACtCW,EAAWE,OAAOL,EAAO,GACzBT,KAAKD,SAAS,CAAEV,QAASuB,M,qCAGZH,EAAOjD,GACpB,IAAMoD,EAAaZ,KAAKhE,MAAMqD,QAAQY,QACtCW,EAAWH,GAAX,eAAyBG,EAAWH,GAApC,CAA4CjD,MAAOA,IACnDwC,KAAKD,SAAS,CAAEV,QAASuB,M,sCAGXH,EAAOnB,GACrB,IAAMsB,EAAaZ,KAAKhE,MAAMqD,QAAQY,QAChCO,EAASI,EAAWH,GACpBhI,EAAOuH,KAAK3D,QAAQ2D,KAAK7D,SAASyE,EAAWH,GAAOrE,OACtD3D,EAAK2H,QAAQI,EAAOlB,QAAQ7G,OAASA,EAAK2H,QAAQd,GAAQ7G,OAC5D+H,EAAOhD,MAAQwC,KAAKa,sBAAsBpI,EAAM6G,IAElDkB,EAAOlB,OAASA,EAChBU,KAAKD,SAAS,CAAEV,QAASuB,M,+BAGlBzB,GACPa,KAAKD,SAAL,aACEZ,MAAOA,EACPpB,OAAQ,GACRsB,QAAS,IACNL,M,qCAIQS,GACb,OAAOF,EAAeS,KAAKF,OAAON,QAASQ,KAAKhE,MAAOyD,K,kCAIvD,OAAOO,KAAKhE,MAAM+B,OAAOyC,QAAO,SAACpB,GAAD,OAAOA,EAAE3C,a,kCAG9B,IAAD,OACV,OAAIuD,KAAKtB,YAAYE,OACZoB,KAAKhE,MAAM+B,OAAOyC,QACvB,SAACpB,GAAD,OAAQA,EAAE3C,SAAW,EAAKN,SAASiD,EAAEhD,MAAMG,YAGtCyD,KAAKhE,MAAM+B,S,kCAIT,IAAD,OACV,OAAIiC,KAAKtB,YAAYE,OACZoB,KAAKhE,MAAM+B,OAAOyC,QAAO,SAACpB,GAAD,OAAQ,EAAKjD,SAASiD,EAAEhD,MAAMG,YAEvD,O,KCvLb,SAASwE,EAAY1J,GAAQ,IACnBiI,EAA4BjI,EAA5BiI,OAAQ0B,EAAoB3J,EAApB2J,SAAUxD,EAAUnG,EAAVmG,MAC1B,MAA0B,YAAtBnG,EAAMiI,OAAO7G,KAEb,yCAAY,CAAEuI,WAAUxD,SAAxB,CAAiC9F,UAAU,gBACzC,4BAAQ8F,OAAO,GAAf,QACA,4BAAQA,OAAO,GAAf,UAGmB,YAAhB8B,EAAO7G,KAEZ,yCAAY,CAAEuI,WAAUxD,SAAxB,CAAiC9F,UAAU,gBACxC,CACC,SACA,SACA,UACA,YACA,WACA,SACA,YACAkE,KAAI,SAACqF,GAAD,OACJ,4BAAQzD,MAAOyD,GAAUA,OAIR,UAAhB3B,EAAO7G,KAEZ,yCAAY,CAAEuI,WAAUxD,SAAxB,CAAiC9F,UAAU,gBACxC,CACC,UACA,UACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YACAkE,KAAI,SAACsF,GAAD,OACJ,4BAAQ1D,MAAO0D,GAAQA,OAIN,WAAhB5B,EAAO7G,MAAqC,SAAhB6G,EAAO7G,KAExC,wCACM,CAAEuI,WAAUxD,SADlB,CAEE9F,UAAU,cACVe,KAAK,SACL0I,KAAK,OAKP,wCAAW,CAAEH,WAAUxD,SAAvB,CAAgC9F,UAAU,cAAce,KAAK,U,IAI7D2I,E,uKACM,IAAD,EASHpB,KAAK3I,MAPP+E,EAFK,EAELA,KACAS,EAHK,EAGLA,WACA4D,EAJK,EAILA,MACAnB,EALK,EAKLA,OACAtD,EANK,EAMLA,MACAwB,EAPK,EAOLA,MACA6D,EARK,EAQLA,aAEI5I,EAAOuD,EAAMK,QAAQL,EAAMG,SAASC,IAC1C,OACE,4BACE,4BACE,kBAAC1D,EAAD,CAAOf,QAAS,kBAAMqE,EAAMsF,aAAab,KAAzC,SAA+D,IAC/D,kBAAChJ,EAAD,CAAOE,QAAS,kBAAMqE,EAAMuF,SAASnF,EAAMS,KACxCA,EAAWE,KAAK,MACV,KAEX,4BACE,4BACErF,UAAU,SACV8F,MAAO8B,EACP0B,SAAU,SAAClH,GAAD,OAAOkC,EAAMwF,gBAAgBf,EAAO3G,EAAExB,OAAOkF,SAEtD/E,EAAKgJ,cAAc7F,KAAI,SAAC8F,GAAD,OACtB,4BAAQ5F,IAAK4F,EAAYlE,MAAOkE,GAC7BA,EAAWC,QAAQ,KAAM,WAKlC,iCACA,4BACE,kBAACZ,EAAD,cACM,CAAEvD,SADR,CAEEwD,SAAU,SAAClH,GAAD,OAAOkC,EAAM4F,eAAenB,EAAO3G,EAAExB,OAAOkF,QACtD8B,OAAQ7G,EAAK2H,QAAQd,MAEtB+B,GAAgB,2BAAIA,S,GAxCVQ,IAAMC,WA+C3B,SAASC,EAAQ1K,GAAQ,IACf2E,EAAwB3E,EAAxB2E,MAAOiD,EAAiB5H,EAAjB4H,aACf,OACE,0BAAMvH,UAAU,WACd,2BAAOA,UAAU,QACf,+BACGL,EAAMgI,QAAQzD,KAAI,SAAC4E,EAAQC,GAAT,OACjB,kBAAC,EAAD,cACM,CAAEzE,QAAOyE,SACTD,EAFN,CAGE1E,IAAK2E,EACLY,aAAcpC,EAAawB,Y,IASnCuB,E,kDACJ,WAAY3K,GAAQ,IAAD,8BACjB,cAAMA,IACDiE,MAAQ,CAAE2G,SAAS,GAFP,E,qDAMjBjC,KAAKzE,UAAS,SAACD,GAAD,MAAY,CACxB2G,SAAU3G,EAAM2G,c,+BAIV,IAAD,EACyCjC,KAAK3I,MAA7C2E,EADD,EACCA,MAAOI,EADR,EACQA,KAAMS,EADd,EACcA,WAAYX,EAD1B,EAC0BA,WAC3BzD,EAAOuD,EAAMK,QAAQH,GAC3B,OACE,oCACE,4BACE,4BACGA,EAAWQ,UAAYjE,EAAKkE,eAC3B,kBAACjE,EAAD,CAAOf,QAAS,kBAAMqE,EAAMY,UAAUR,EAAMS,KAA5C,eAKJ,4BACGX,EAAWiD,OACV,kBAACzG,EAAD,CAAOhB,UAAU,aAAaC,QAASqI,KAAKkC,OAAOC,KAAKnC,OACrDA,KAAK1E,MAAM2G,QAAU,SAAW,QAIvC,4BACG/F,EAAWzD,KACV,kBAAChB,EAAD,CAAOE,QAAS,kBAAMqE,EAAMuF,SAASnF,EAAMS,KACxCX,EAAWkG,YAGdlG,EAAWkG,aAIhBpC,KAAK1E,MAAM2G,SACV,4BACE,6BACA,wBAAIpE,QAAQ,KACV,kBAACwE,EAAD,cACM,CAAErG,QAAOI,OAAMS,cADrB,CAEEsC,MAAOjD,EAAWiD,gB,GAhDd0C,IAAMC,WA0D1B,SAASO,EAAUhL,GAAQ,IACjB2E,EAAmC3E,EAAnC2E,MAAOmD,EAA4B9H,EAA5B8H,MAAO/C,EAAqB/E,EAArB+E,KAAMS,EAAexF,EAAfwF,WACtByF,EAActG,EAAMuG,eAAepD,GACzC,OACE,+BACE,+BACGmD,EAAYE,aAAa5G,KAAI,SAAC6G,GAC7B,IAAMvG,EAAaoG,EAAYvE,OAAO0E,GACtC,OACE,kBAAC,EAAD,eACE3G,IAAK2G,GACD,CAAEzG,QAAOE,cAFf,CAGEE,KAAMA,EAAKsG,OAAO,CAACD,IACnB5F,WAAYA,EAAW6F,OAAO,CAACxG,EAAWkG,qBASxD,SAASO,EAActL,GACrB,OACE,4BACEK,UAAU,gBACVsJ,SAAU,SAAClH,GAAD,OAAOzC,EAAM2E,MAAM4G,SAAS9I,EAAExB,OAAOkF,QAC/CA,MAAOnG,EAAM8H,OAEZ9H,EAAMwL,aAAajH,KAAI,SAACuD,GAAD,OACtB,4BAAQrD,IAAKqD,GAAQA,OAM7B,SAAS2D,EAAKzL,GACZ,OACE,kBAAC,IAAD,CAAM+D,GAAG,IAAI1D,UAAU,QACrB,qCACA,0BAAMA,UAAU,WAAhB,IAA4BX,IAKlC,SAASgM,EAAU1L,GAAQ,IAEvB2E,EASE3E,EATF2E,MACAyC,EAQEpH,EARFoH,KACAD,EAOEnH,EAPFmH,KACA9D,EAMErD,EANFqD,KACAmI,EAKExL,EALFwL,aACA1D,EAIE9H,EAJF8H,MACAE,EAGEhI,EAHFgI,QACAJ,EAEE5H,EAFF4H,aACAO,EACEnI,EADFmI,QAEF,OACE,oCACE,kBAACmD,EAAkB,CAAE3G,QAAO6G,eAAc1D,UAC1C,kBAAC4C,EAAY,CAAE/F,QAAOqD,UAASJ,iBAC/B,sCACWR,EAAKG,OAASJ,EAAKI,OAD9B,aACgD,IAC9C,uBAAGoE,KAAMhH,EAAMiH,eAAe,QAA9B,mBAFF,KAE8D,IAC5D,uBAAGD,KAAMhH,EAAMiH,eAAe,SAA9B,gBAHF,KAG4D,IAC1D,kBAACnI,EAAD,CACEf,KAAK,OACLgB,OAAM,UAAKyE,EAAL,cACNpF,KAAM8E,EAAiBlD,EAAMA,OAC7BhB,YAAa,SAACkI,GAAD,uBAAoBA,EAAKC,GAAzB,aAGjB,yBAAKzL,UAAU,aACb,yBAAKA,UAAU,cACb,kBAAC2K,EAAD,cAAe,CAAErG,QAAOmD,SAAxB,CAAiC/C,KAAM,GAAIS,WAAY,OAExDb,EAAM2C,YAAYC,QAAU5C,EAAM0C,YAAYE,OAC7C,kBAACL,EAAY,CAAEvC,QAAOyC,OAAMD,OAAM9D,SAElC,oDAOV,SAAS0I,EAAc/L,GAAQ,IACrBgM,EAA2BhM,EAA3BgM,cAAe7D,EAAYnI,EAAZmI,QACf2D,EAAOG,cAAPH,GACFvK,EAAG,UAAM4G,EAAN,qBAA0B2D,EAA1B,KAHmB,EAIJjJ,EAAQtB,GAJJ,mBAIrBsK,EAJqB,KAIfK,EAJe,KAK5B,OAAKL,EAEH,yBAAKxL,UAAU,iBACb,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,kBAAhB,cACA,kBAAC,IAAD,CAAM0D,GAAI8H,EAAKM,MAAf,SAEF,8BACE,2BACE/K,KAAK,OACL+E,MAAO0F,EAAKnJ,KACZiH,SAAU,SAACpJ,GACT2L,EAAQ,CAAExJ,KAAMnC,EAAMU,OAAOkF,SAE/B9F,UAAU,gBACV+L,YAAY,iBAEd,+BACE,+BACE,4BACE,sCACA,4BAAKP,EAAK/D,QAEZ,4BACE,uCACA,4BAAK+D,EAAKnF,SAEZ,4BACE,wCACA,4BAAKmF,EAAKlH,UAIhB,8BACEwB,MAAO0F,EAAKQ,YACZ1C,SAAU,SAACpJ,GACT2L,EAAQ,CAAEG,YAAa9L,EAAMU,OAAOkF,SAEtCiG,YAAY,wBAEbJ,GACC,+BACE,+BACE,4BACE,0CACA,4BACE,2BACE5K,KAAK,WACLkL,QAAST,EAAKU,OACd5C,SAAU,SAACpJ,GACT2L,EAAQ,CAAEK,OAAQhM,EAAMU,OAAOqL,eAKvC,4BACE,4CACA,4BAAKT,EAAKU,QAAU,kBAACxM,EAAD,CAAUE,KAAM4L,EAAKW,gBAE3C,4BACE,8CACA,4BACGX,EAAKU,QACJ,kBAACxM,EAAD,CAAUE,KAAM4L,EAAKY,6BAQnC,yBAAKpM,UAAU,oBACb,kBAAC2D,EAAD,CAAQN,OAAQnC,EAAKoC,YAAY,MACjC,kBAAC,IAAD,CAAMI,GAAG,KAAT,UAzEY,GA+EpB,SAAS2I,EAAc1M,GAAQ,IACrBmI,EAAYnI,EAAZmI,QADoB,EAEPtF,EAAQ,GAAD,OAAIsF,EAAJ,eAArBwE,EAFqB,oBAG5B,OAAKA,EAEH,6BACE,2CACA,6BACGA,EAAWpI,KAAI,SAACsH,EAAMzC,GAAP,OACd,yBAAK3E,IAAK2E,GACR,2BACE,kBAAC,IAAD,CAAM/I,UAAU,OAAO0D,GAAI8H,EAAKM,MAC7BN,EAAK/D,MADR,MACkB+D,EAAKnJ,MACf,IAHV,IAIG,kBAAC,IAAD,CAAMqB,GAAE,iBAAY8H,EAAKC,GAAjB,UAAR,QAJH,KAMA,2BAAID,EAAKQ,mBAbK,GAqB1B,SAASO,EAAS5M,GAAQ,IAChBwL,EAA0BxL,EAA1BwL,aAAcrD,EAAYnI,EAAZmI,QACtB,OACE,yBAAK9H,UAAU,SACb,6BACE,sCACA,6BACGmL,EAAajH,KAAI,SAACuD,GAAD,OAChB,yBAAKrD,IAAKqD,GACR,kBAAC,IAAD,CAAM/D,GAAE,iBAAY+D,EAAZ,UAA2BzH,UAAU,QAC1CyH,SAMX,kBAAC4E,EAAkB,CAAEvE,aCrY3B,IAAM0E,GAASC,EAAQ,IAEvB,SAASC,GAAYtK,GACJ,eAAXA,EAAEC,KACJN,QAAQC,IAAI,oBAEZD,QAAQC,IAAII,GACZuK,IAAwBvK,I,IAItBwK,G,kDACJ,WAAYjN,GAAQ,IAAD,8BACjB,cAAMA,IACDiE,MAAL,aACEiJ,SAAS,EACTpF,MAAO,GACPpB,OAAQ,GACRsB,QAAS,IACNL,GAPY,E,yDAWN1D,GAAQ,IAAD,OAGlB,OAAOtB,EAFKuF,EAAeS,KAAK3I,MAAMyI,OAAON,QAASlE,EAAO,SAE3ClC,MAAK,SAACC,GAQtB,OAPAA,GACE,EAAKkC,SAAS,CACZb,KAAMrB,EAASqB,KACf8D,KAAMnF,EAASmF,KACfC,KAAMpF,EAASoF,KACfQ,aAAc5F,EAAS4F,eAEpB5F,O,0CAIU,IAAD,SAC4B2G,KAAK3I,MAA3C8H,EADU,EACVA,MAAOqF,EADG,EACHA,SAAUC,EADP,EACOA,SAAU3E,EADjB,EACiBA,OAC7BlH,EAAG,UAAMkH,EAAON,QAAb,iBAA6BL,EAA7B,YAAsCqF,EAAtC,iBAAuDC,GAChEvL,MAAMN,GACHQ,MAAK,SAACC,GAAD,OAAcA,EAASY,UAC5Bb,MAAK,SAACC,GACL,IAAMqL,EAAQ,aACZH,SAAS,EACTpF,MAAO9F,EAAS8F,MAChBpB,OAAQ1E,EAAS0E,OACjBsB,QAAShG,EAASgG,SACfL,GAEL,EAAKzD,SAASmJ,GACdzM,OAAO0M,QAAQC,aACbF,EACA,KACAnF,EAAe,EAAKlI,MAAMyI,OAAON,QAASkF,EAAU,SAEtDzM,OAAO4M,WAAa,SAAC/K,GACnB,EAAKyB,SAASzB,EAAEwB,OAChB,EAAKwJ,aAAahL,EAAEwB,OAAOzB,MAAMuK,KAEnC,EAAKU,aAAa,EAAKxJ,OAAOzB,MAAMuK,S,6CAKxCnM,OAAO4M,WAAa,e,wCAGJE,GAChB/E,KAAKzE,SAASwJ,GACd,IAAMC,EAAQ,eAAQhF,KAAK1E,MAAb,GAAuByJ,GAC/BE,EAAO,aACX9F,MAAO6F,EAAS7F,MAChBpB,OAAQiH,EAASjH,OACjBsB,QAAS2F,EAAS3F,SACfL,GAEL/G,OAAO0M,QAAQO,UACbD,EACA,KACA1F,EAAeS,KAAK3I,MAAMyI,OAAON,QAASwF,EAAU,SAEtDhF,KAAK8E,aAAaE,GACf5L,MAAK,SAACC,GACLA,EAAQ,eAAQA,EAAR,GAAqB2F,GAC7BkF,GAAOiB,gBAAgB9L,EAAU4L,MAElCpL,MAAMuK,M,+BAIT,GAAIpE,KAAK1E,MAAMiJ,QAAS,MAAO,GAC/B,IAAMvI,EAAQ,IAAI6D,EAChBG,KAAK3I,MAAMyI,OACXE,KAAK1E,MACL0E,KAAKoF,kBAAkBjD,KAAKnC,OAE9B,OACE,kBAAC+C,EAAD,eACE/G,MAAOA,EACP6G,aAAc7C,KAAK3I,MAAMyI,OAAO+C,aAChCrD,QAASQ,KAAK3I,MAAMyI,OAAON,SACvBQ,KAAK1E,Y,GA5FMuG,IAAMC,WAkG7B,SAASuD,GAAIhO,GAAQ,IAAD,EACUiM,cAApBnE,EADU,EACVA,MAAOqF,EADG,EACHA,SACf,OACE,kBAAC,GAAD,iBACMnN,EADN,CAEE8H,MAAOA,EACPqF,SAAUA,GAAY,GACtBC,SAAUa,cAAcC,UA2BfC,OAtBf,SAAanO,GAAQ,IACXmI,EAAyCnI,EAAzCmI,QAASqD,EAAgCxL,EAAhCwL,aAAcQ,EAAkBhM,EAAlBgM,cAC/B,OACE,kBAAC,IAAD,CAAeoC,SAAUjG,GACvB,yBAAKkG,GAAG,QACN,kBAAC5C,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO1G,KAAK,iCACV,kBAACiJ,GAAD,eAAKvF,OAAQzI,GAAW,CAAEwL,mBAE5B,kBAAC,IAAD,CAAOzG,KAAK,mBACV,kBAACgH,EAAkB,CAAE5D,UAAS6D,mBAEhC,kBAAC,IAAD,CAAOjH,KAAK,KACV,kBAAC6H,EAAa,CAAEpB,eAAcrD,iBC/IpCM,GAASnF,KAAKgL,MAChB3O,SAASC,eAAe,kBAAkBC,aAExCH,GAAUC,SAASC,eAAe,mBAAmBC,YAAYC,OAEnE2I,GAAO8F,WACPvB,IAAY,CACRwB,IAAK/F,GAAO8F,UACZE,QAAS/O,GACTgP,kBAAkB,EAClBC,eAAgB,MAIxBC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,GAAQrG,KAEb9I,SAASC,eAAe,W","file":"static/js/main.db7f152f.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport \"./App.css\";\nlet controller;\nlet fetchDescription;\n\nconst version = document.getElementById(\"backend-version\").textContent.trim();\n\nfunction CopyText(props) {\n    const { text } = props;\n    const ref = useRef(null);\n    return (\n        <>\n            <span ref={ref}>{text}</span>{\" \"}\n            <TLink\n                className=\"CopyToClipboard\"\n                onClick={(event) => {\n                    const range = document.createRange();\n                    range.selectNodeContents(ref.current);\n                    window.getSelection().removeAllRanges();\n                    window.getSelection().addRange(range);\n                    document.execCommand(\"copy\");\n                    window.getSelection().removeAllRanges();\n                    event.target.blur();\n                }}\n            >\n                (copy to clipboard)\n            </TLink>\n        </>\n    );\n}\n\nfunction TLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button\n            {...{ onClick }}\n            type=\"button\"\n            className={\"Link \" + (className || \"\")}\n        >\n            {children}\n        </button>\n    );\n}\n\nfunction SLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button\n            {...{ onClick }}\n            type=\"button\"\n            className={\"sLink material-icons \" + (className || \"\")}\n        >\n            {children}\n        </button>\n    );\n}\n\nfunction doFetch(url, options, process) {\n    if (controller) controller.abort();\n    controller = new AbortController();\n    fetchDescription = `${options.method} ${url}`;\n    return fetch(url, { signal: controller.signal, ...options })\n        .then((response) => {\n            const response_version = response.headers.get(\"x-version\");\n            if (response_version !== version) {\n                console.log(\n                    \"Version mismatch, hard reload\",\n                    version,\n                    response_version\n                );\n                window.location.reload(true);\n            }\n            return response;\n        })\n        .then((response) => process(response))\n        .catch((e) => {\n            if (e.name === \"AbortError\") {\n                console.log(\"Request aborted\", fetchDescription);\n                return undefined;\n            } else {\n                throw e;\n            }\n        });\n}\n\nfunction doGet(url) {\n    return doFetch(url, { method: \"GET\" }, (response) => response.json());\n}\n\nfunction doDelete(url) {\n    return doFetch(\n        url,\n        {\n            method: \"DELETE\",\n            headers: { \"X-CSRFToken\": Cookies.get(\"csrftoken\") },\n        },\n        (response) => response\n    );\n}\n\nfunction doPatch(url, data) {\n    return doFetch(\n        url,\n        {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        },\n        (response) => response.json()\n    );\n}\n\nfunction doPost(url, data) {\n    return doFetch(\n        url,\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        },\n        (response) => response.json()\n    );\n}\n\nfunction useData(url) {\n    const [data, setData] = useState();\n    useEffect(() => {\n        doGet(url).then((response) => setData(response));\n    }, [url]);\n    return [\n        data,\n        (updates) => {\n            setData((prev) => ({ ...prev, ...updates }));\n            doPatch(url, updates).then(\n                (response) =>\n                    response && setData((prev) => ({ ...prev, ...response }))\n            );\n        },\n    ];\n}\n\nfunction Save(props) {\n    const { name, apiUrl, data, redirectUrl } = props;\n    const [saving, setSaving] = useState(\"save\");\n    if (saving === \"save\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setSaving(\"saving\");\n                    doPost(apiUrl, data).then((response) =>\n                        setSaving(response)\n                    );\n                }}\n            >\n                Save {name || \"\"}\n            </TLink>\n        );\n    else if (saving === \"saving\") return <>Saving {name || \"\"}</>;\n    else {\n        const url =\n            typeof redirectUrl === \"function\"\n                ? redirectUrl(saving)\n                : redirectUrl;\n        return <Redirect to={url} />;\n    }\n}\n\nfunction Delete(props) {\n    const { name, apiUrl, redirectUrl } = props;\n    const [state, setState] = useState(\"normal\");\n    if (state === \"normal\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setState(\"confirm\");\n                }}\n            >\n                Delete {name || \"\"}\n            </TLink>\n        );\n    else if (state === \"confirm\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setState(\"deleting\");\n                    doDelete(apiUrl).then((response) => setState(\"deleted\"));\n                }}\n            >\n                Are you sure?\n            </TLink>\n        );\n    else if (state === \"deleting\") return \"Deleting\";\n    else if (state === \"deleted\") return <Redirect to={redirectUrl} />;\n    else throw new Error(`unknown delete state: ${state}`);\n}\n\nexport {\n    TLink,\n    SLink,\n    doPatch,\n    doGet,\n    doDelete,\n    doPost,\n    useData,\n    version,\n    Save,\n    Delete,\n    CopyText,\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { TLink, SLink } from \"./Util\";\n\nfunction Spacer(props) {\n  const { spaces } = props;\n  if (spaces > 0) {\n    return [...Array(spaces)].map((_, key) => (\n      <td className=\"Empty\" key={key} />\n    ));\n  }\n  return null;\n}\n\nfunction HeadCell(props) {\n  const { query, field, className } = props;\n  const modelField = query.getField(field.path);\n  const type = query.getType(modelField);\n  return (\n    <th {...{ className }}>\n      <SLink onClick={() => query.removeField(field)}>close</SLink>\n      {modelField.canPivot && (\n        <>\n          <SLink onClick={() => query.togglePivot(field)}>\n            {field.pivoted ? \"call_received\" : \"call_made\"}\n          </SLink>\n        </>\n      )}\n      {modelField.concrete && type.defaultLookup ? (\n        <>\n          <SLink onClick={() => query.addFilter(field.path, field.prettyPath)}>\n            filter_alt\n          </SLink>{\" \"}\n          <TLink onClick={() => query.toggleSort(field)}>\n            {field.prettyPath.join(\" \")}\n            {\n              {\n                dsc: `↑${field.priority}`,\n                asc: `↓${field.priority}`,\n                null: \"\",\n              }[field.sort]\n            }\n          </TLink>\n        </>\n      ) : (\n        \" \" + field.prettyPath.join(\" \")\n      )}\n    </th>\n  );\n}\n\nfunction DataCell(props) {\n  const { query, field, className, span, value } = props;\n  let modelField = query.getField(field.path);\n  let formattedValue;\n  if (value === undefined) {\n    formattedValue = \"\";\n  } else if (modelField.type === \"html\" && value) {\n    formattedValue = <div dangerouslySetInnerHTML={{ __html: value }} />;\n  } else {\n    formattedValue = String(value);\n  }\n  return (\n    <td className={modelField.type + \" \" + className || \"\"} colSpan={span || 1}>\n      {formattedValue}\n    </td>\n  );\n}\n\nfunction VTableHeadRow(props) {\n  const { fields, query, classNameFirst } = props;\n  return fields.map((field, i) => (\n    <HeadCell\n      {...{ query, field }}\n      key={field.pathStr}\n      className={\"HoriBorder \" + (i ? \"\" : classNameFirst)}\n    />\n  ));\n}\n\nfunction VTableBodyRow(props) {\n  const { fields, query, classNameFirst, row } = props;\n  return fields.map((field, i) => (\n    <DataCell\n      {...{ query, field }}\n      key={field.pathStr}\n      value={row[field.pathStr]}\n      className={i ? \"\" : classNameFirst}\n    />\n  ));\n}\n\nfunction HTableRow(props) {\n  const { query, field, data, span } = props;\n  return (\n    <>\n      <HeadCell {...{ query, field }} />\n      {data.map((col, key) => (\n        <DataCell {...{ key, query, field, span }} value={col[field.pathStr]} />\n      ))}\n    </>\n  );\n}\n\nfunction Results(props) {\n  const { query, cols, rows, body } = props;\n  return (\n    <table className=\"Results\">\n      <thead>\n        {/* pivoted data */}\n        {query.colFields().map((field) => {\n          return (\n            <tr key={field.pathStr}>\n              <Spacer spaces={query.rowFields().length - 1} />\n              <HTableRow\n                {...{ query, field }}\n                span={query.resFields().length}\n                data={cols}\n              />\n            </tr>\n          );\n        })}\n\n        {/* column headers */}\n        <tr>\n          <Spacer spaces={1 - query.rowFields().length} />\n          <VTableHeadRow {...{ query }} fields={query.rowFields()} />\n          {cols.map((_, key) => (\n            <VTableHeadRow\n              {...{ key, query }}\n              fields={query.resFields()}\n              classNameFirst=\"LeftBorder\"\n            />\n          ))}\n        </tr>\n      </thead>\n\n      {/* row headers and body */}\n      <tbody>\n        {rows.map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            <Spacer spaces={1 - query.rowFields().length} />\n            <VTableBodyRow {...{ query, row }} fields={query.rowFields()} />\n            {body.map((table, key) => (\n              <VTableBodyRow\n                {...{ key, query }}\n                fields={query.resFields()}\n                row={table[rowIndex]}\n                classNameFirst=\"LeftBorder\"\n              />\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport { Results };\n","const empty = {\n  rows: [{}],\n  cols: [{}],\n  body: [[{}]],\n  filterErrors: [],\n};\n\nfunction getPartsForQuery(query) {\n  return {\n    model: query.model,\n    fields: query.fields\n      .map(\n        (f) =>\n          (f.pivoted ? \"&\" : \"\") +\n          f.path.join(\"__\") +\n          { asc: `+${f.priority}`, dsc: `-${f.priority}`, null: \"\" }[f.sort]\n      )\n      .join(\",\"),\n    query: query.filters\n      .map((f) => `${f.path.join(\"__\")}__${f.lookup}=${f.value}`)\n      .join(\"&\"),\n  };\n}\n\nfunction getUrlForQuery(baseUrl, query, media) {\n  const parts = getPartsForQuery(query);\n  const basePath = `${baseUrl}query/${parts.model}`;\n  return `${window.location.origin}${basePath}/${parts.fields}.${media}?${parts.query}`;\n}\n\nclass Query {\n  constructor(config, query, setQuery) {\n    this.config = config;\n    this.query = query;\n    this.setQuery = setQuery;\n  }\n\n  getField(path) {\n    const field = path.slice(-1);\n    let model = this.query.model;\n    for (const field of path.slice(0, -1)) {\n      model = this.config.allModelFields[model].fields[field].model;\n    }\n    return this.config.allModelFields[model].fields[field];\n  }\n\n  getType(field) {\n    return this.config.types[field.type];\n  }\n\n  getModelFields(model) {\n    return this.config.allModelFields[model];\n  }\n\n  getDefaultLookupValue(type, lookup) {\n    return String(this.config.types[type.lookups[lookup].type].defaultValue);\n  }\n\n  addField(path, prettyPath) {\n    const newFields = this.query.fields.slice();\n    newFields.push({\n      path: path,\n      pathStr: path.join(\"__\"),\n      prettyPath: prettyPath,\n      sort: null,\n      priority: null,\n      pivoted: false,\n    });\n    this.setQuery({ fields: newFields });\n  }\n\n  removeField(field) {\n    this.setQuery({\n      fields: this.query.fields.filter((f) => f.pathStr !== field.pathStr),\n    });\n  }\n\n  toggleSort(field) {\n    const index = this.query.fields.findIndex(\n      (f) => f.pathStr === field.pathStr\n    );\n    const newSort = { asc: \"dsc\", dsc: null, null: \"asc\" }[field.sort];\n    let newFields = this.query.fields.slice();\n\n    if (field.sort) {\n      // move any later sort fields forward\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority:\n          f.priority != null && f.priority > field.priority\n            ? f.priority - 1\n            : f.priority,\n      }));\n    }\n\n    if (newSort) {\n      // move all other fiels back and insert the updated one\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority: f.priority != null ? f.priority + 1 : f.priority,\n      }));\n      newFields[index] = { ...field, sort: newSort, priority: 0 };\n    } else {\n      // blank the sort on the updated field\n      newFields[index] = { ...field, sort: null, priority: null };\n    }\n\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  togglePivot(field) {\n    const index = this.query.fields.findIndex(\n      (f) => f.pathStr === field.pathStr\n    );\n    let newFields = this.query.fields.slice();\n    newFields[index].pivoted = !newFields[index].pivoted;\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  addFilter(path, prettyPath) {\n    const type = this.getType(this.getField(path));\n    const newFilters = this.query.filters.slice();\n    newFilters.push({\n      path: path,\n      pathStr: path.join(\"__\"),\n      prettyPath: prettyPath,\n      lookup: type.defaultLookup,\n      value: this.getDefaultLookupValue(type, type.defaultLookup),\n    });\n    this.setQuery({ filters: newFilters });\n  }\n\n  removeFilter(index) {\n    const newFilters = this.query.filters.slice();\n    newFilters.splice(index, 1);\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterValue(index, value) {\n    const newFilters = this.query.filters.slice();\n    newFilters[index] = { ...newFilters[index], value: value };\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterLookup(index, lookup) {\n    const newFilters = this.query.filters.slice();\n    const filter = newFilters[index];\n    const type = this.getType(this.getField(newFilters[index].path));\n    if (type.lookups[filter.lookup].type !== type.lookups[lookup].type) {\n      filter.value = this.getDefaultLookupValue(type, lookup);\n    }\n    filter.lookup = lookup;\n    this.setQuery({ filters: newFilters });\n  }\n\n  setModel(model) {\n    this.setQuery({\n      model: model,\n      fields: [],\n      filters: [],\n      ...empty,\n    });\n  }\n\n  getUrlForMedia(media) {\n    return getUrlForQuery(this.config.baseUrl, this.query, media);\n  }\n\n  colFields() {\n    return this.query.fields.filter((f) => f.pivoted);\n  }\n\n  rowFields() {\n    if (this.colFields().length) {\n      return this.query.fields.filter(\n        (f) => !f.pivoted && this.getField(f.path).canPivot\n      );\n    } else {\n      return this.query.fields;\n    }\n  }\n\n  resFields() {\n    if (this.colFields().length) {\n      return this.query.fields.filter((f) => !this.getField(f.path).canPivot);\n    } else {\n      return [];\n    }\n  }\n}\n\nexport { Query, getPartsForQuery, getUrlForQuery, empty };\n","import React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { TLink, SLink, useData, version, Save, Delete, CopyText } from \"./Util\";\nimport { Results } from \"./Results\";\nimport { getPartsForQuery } from \"./Query\";\nimport \"./App.css\";\n\nfunction FilterValue(props) {\n  const { lookup, onChange, value } = props;\n  if (props.lookup.type === \"boolean\")\n    return (\n      <select {...{ onChange, value }} className=\"FilterValue\">\n        <option value={true}>true</option>\n        <option value={false}>false</option>\n      </select>\n    );\n  else if (lookup.type === \"weekday\")\n    return (\n      <select {...{ onChange, value }} className=\"FilterValue\">\n        {[\n          \"Sunday\",\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\",\n        ].map((weekday) => (\n          <option value={weekday}>{weekday}</option>\n        ))}\n      </select>\n    );\n  else if (lookup.type === \"month\")\n    return (\n      <select {...{ onChange, value }} className=\"FilterValue\">\n        {[\n          \"January\",\n          \"Febuary\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ].map((month) => (\n          <option value={month}>{month}</option>\n        ))}\n      </select>\n    );\n  else if (lookup.type === \"number\" || lookup.type === \"year\")\n    return (\n      <input\n        {...{ onChange, value }}\n        className=\"FilterValue\"\n        type=\"number\"\n        step=\"0\"\n      />\n    );\n  else\n    return (\n      <input {...{ onChange, value }} className=\"FilterValue\" type=\"text\" />\n    );\n}\n\nclass Filter extends React.Component {\n  render() {\n    const {\n      path,\n      prettyPath,\n      index,\n      lookup,\n      query,\n      value,\n      errorMessage,\n    } = this.props;\n    const type = query.getType(query.getField(path));\n    return (\n      <tr>\n        <td>\n          <SLink onClick={() => query.removeFilter(index)}>close</SLink>{\" \"}\n          <TLink onClick={() => query.addField(path, prettyPath)}>\n            {prettyPath.join(\" \")}\n          </TLink>{\" \"}\n        </td>\n        <td>\n          <select\n            className=\"Lookup\"\n            value={lookup}\n            onChange={(e) => query.setFilterLookup(index, e.target.value)}\n          >\n            {type.sortedLookups.map((lookupName) => (\n              <option key={lookupName} value={lookupName}>\n                {lookupName.replace(/_/g, \" \")}\n              </option>\n            ))}\n          </select>\n        </td>\n        <td>=</td>\n        <td>\n          <FilterValue\n            {...{ value }}\n            onChange={(e) => query.setFilterValue(index, e.target.value)}\n            lookup={type.lookups[lookup]}\n          />\n          {errorMessage && <p>{errorMessage}</p>}\n        </td>\n      </tr>\n    );\n  }\n}\n\nfunction Filters(props) {\n  const { query, filterErrors } = props;\n  return (\n    <form className=\"Filters\">\n      <table className=\"Flat\">\n        <tbody>\n          {props.filters.map((filter, index) => (\n            <Filter\n              {...{ query, index }}\n              {...filter}\n              key={index}\n              errorMessage={filterErrors[index]}\n            />\n          ))}\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nclass Field extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { toggled: false };\n  }\n\n  toggle() {\n    this.setState((state) => ({\n      toggled: !state.toggled,\n    }));\n  }\n\n  render() {\n    const { query, path, prettyPath, modelField } = this.props;\n    const type = query.getType(modelField);\n    return (\n      <>\n        <tr>\n          <td>\n            {modelField.concrete && type.defaultLookup && (\n              <SLink onClick={() => query.addFilter(path, prettyPath)}>\n                filter_alt\n              </SLink>\n            )}\n          </td>\n          <td>\n            {modelField.model && (\n              <SLink className=\"ToggleLink\" onClick={this.toggle.bind(this)}>\n                {this.state.toggled ? \"remove\" : \"add\"}\n              </SLink>\n            )}\n          </td>\n          <td>\n            {modelField.type ? (\n              <TLink onClick={() => query.addField(path, prettyPath)}>\n                {modelField.prettyName}\n              </TLink>\n            ) : (\n              modelField.prettyName\n            )}\n          </td>\n        </tr>\n        {this.state.toggled && (\n          <tr>\n            <td></td>\n            <td colSpan=\"2\">\n              <AllFields\n                {...{ query, path, prettyPath }}\n                model={modelField.model}\n              />\n            </td>\n          </tr>\n        )}\n      </>\n    );\n  }\n}\n\nfunction AllFields(props) {\n  const { query, model, path, prettyPath } = props;\n  const modelFields = query.getModelFields(model);\n  return (\n    <table>\n      <tbody>\n        {modelFields.sortedFields.map((fieldName) => {\n          const modelField = modelFields.fields[fieldName];\n          return (\n            <Field\n              key={fieldName}\n              {...{ query, modelField }}\n              path={path.concat([fieldName])}\n              prettyPath={prettyPath.concat([modelField.prettyName])}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nfunction ModelSelector(props) {\n  return (\n    <select\n      className=\"ModelSelector\"\n      onChange={(e) => props.query.setModel(e.target.value)}\n      value={props.model}\n    >\n      {props.sortedModels.map((model) => (\n        <option key={model}>{model}</option>\n      ))}\n    </select>\n  );\n}\n\nfunction Logo(props) {\n  return (\n    <Link to=\"/\" className=\"Logo\">\n      <span>DDB</span>\n      <span className=\"Version\">v{version}</span>\n    </Link>\n  );\n}\n\nfunction QueryPage(props) {\n  const {\n    query,\n    rows,\n    cols,\n    body,\n    sortedModels,\n    model,\n    filters,\n    filterErrors,\n    baseUrl,\n  } = props;\n  return (\n    <>\n      <ModelSelector {...{ query, sortedModels, model }} />\n      <Filters {...{ query, filters, filterErrors }} />\n      <p>\n        Showing {rows.length * cols.length} results -{\" \"}\n        <a href={query.getUrlForMedia(\"csv\")}>Download as CSV</a> -{\" \"}\n        <a href={query.getUrlForMedia(\"json\")}>View as JSON</a> -{\" \"}\n        <Save\n          name=\"View\"\n          apiUrl={`${baseUrl}api/views/`}\n          data={getPartsForQuery(query.query)}\n          redirectUrl={(view) => `/views/${view.pk}.html`}\n        />\n      </p>\n      <div className=\"MainSpace\">\n        <div className=\"FieldsList\">\n          <AllFields {...{ query, model }} path={[]} prettyPath={[]} />\n        </div>\n        {query.rowFields().length || query.colFields().length ? (\n          <Results {...{ query, rows, cols, body }} />\n        ) : (\n          <h2>No fields selected</h2>\n        )}\n      </div>\n    </>\n  );\n}\n\nfunction EditSavedView(props) {\n  const { canMakePublic, baseUrl } = props;\n  const { pk } = useParams();\n  const url = `${baseUrl}api/views/${pk}/`;\n  const [view, setView] = useData(url);\n  if (!view) return \"\";\n  return (\n    <div className=\"EditSavedView\">\n      <div className=\"SavedViewActions\">\n        <span className=\"SavedViewTitle\">Saved View</span>\n        <Link to={view.link}>Open</Link>\n      </div>\n      <form>\n        <input\n          type=\"text\"\n          value={view.name}\n          onChange={(event) => {\n            setView({ name: event.target.value });\n          }}\n          className=\"SavedViewName\"\n          placeholder=\"enter a name\"\n        />\n        <table>\n          <tbody>\n            <tr>\n              <th>Model:</th>\n              <td>{view.model}</td>\n            </tr>\n            <tr>\n              <th>Fields:</th>\n              <td>{view.fields}</td>\n            </tr>\n            <tr>\n              <th>Filters:</th>\n              <td>{view.query}</td>\n            </tr>\n          </tbody>\n        </table>\n        <textarea\n          value={view.description}\n          onChange={(event) => {\n            setView({ description: event.target.value });\n          }}\n          placeholder=\"enter a description\"\n        />\n        {canMakePublic && (\n          <table>\n            <tbody>\n              <tr>\n                <th>Is Public:</th>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={view.public}\n                    onChange={(event) => {\n                      setView({ public: event.target.checked });\n                    }}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>Public link:</th>\n                <td>{view.public && <CopyText text={view.public_link} />}</td>\n              </tr>\n              <tr>\n                <th>Google Sheets:</th>\n                <td>\n                  {view.public && (\n                    <CopyText text={view.google_sheets_formula} />\n                  )}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        )}\n      </form>\n      <div className=\"SavedViewActions\">\n        <Delete apiUrl={url} redirectUrl=\"/\" />\n        <Link to=\"/\">Done</Link>\n      </div>\n    </div>\n  );\n}\n\nfunction SavedViewList(props) {\n  const { baseUrl } = props;\n  const [savedViews] = useData(`${baseUrl}api/views/`);\n  if (!savedViews) return \"\";\n  return (\n    <div>\n      <h1>Saved Views</h1>\n      <div>\n        {savedViews.map((view, index) => (\n          <div key={index}>\n            <p>\n              <Link className=\"Link\" to={view.link}>\n                {view.model} - {view.name}\n              </Link>{\" \"}\n              (<Link to={`/views/${view.pk}.html`}>edit</Link>)\n            </p>\n            <p>{view.description}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction HomePage(props) {\n  const { sortedModels, baseUrl } = props;\n  return (\n    <div className=\"Index\">\n      <div>\n        <h1>Models</h1>\n        <div>\n          {sortedModels.map((model) => (\n            <div key={model}>\n              <Link to={`/query/${model}/.html`} className=\"Link\">\n                {model}\n              </Link>\n            </div>\n          ))}\n        </div>\n      </div>\n      <SavedViewList {...{ baseUrl }} />\n    </div>\n  );\n}\n\nexport { HomePage, QueryPage, Logo, EditSavedView };\n","import * as Sentry from \"@sentry/browser\";\nimport React from \"react\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  useParams,\n  useLocation,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { HomePage, QueryPage, Logo, EditSavedView } from \"./Components\";\nimport { Query, getUrlForQuery, empty } from \"./Query\";\nimport { doGet } from \"./Util\";\n\nconst assert = require(\"assert\");\n\nfunction handleError(e) {\n  if (e.name === \"AbortError\") {\n    console.log(\"request aborted\");\n  } else {\n    console.log(e);\n    Sentry.captureException(e);\n  }\n}\n\nclass QueryApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      booting: true,\n      model: \"\",\n      fields: [],\n      filters: [],\n      ...empty,\n    };\n  }\n\n  fetchResults(state) {\n    const url = getUrlForQuery(this.props.config.baseUrl, state, \"json\");\n\n    return doGet(url).then((response) => {\n      response &&\n        this.setState({\n          body: response.body,\n          cols: response.cols,\n          rows: response.rows,\n          filterErrors: response.filterErrors,\n        });\n      return response;\n    });\n  }\n\n  componentDidMount() {\n    const { model, fieldStr, queryStr, config } = this.props;\n    const url = `${config.baseUrl}query/${model}/${fieldStr}.query${queryStr}`;\n    fetch(url)\n      .then((response) => response.json())\n      .then((response) => {\n        const reqState = {\n          booting: false,\n          model: response.model,\n          fields: response.fields,\n          filters: response.filters,\n          ...empty,\n        };\n        this.setState(reqState);\n        window.history.replaceState(\n          reqState,\n          null,\n          getUrlForQuery(this.props.config.baseUrl, reqState, \"html\")\n        );\n        window.onpopstate = (e) => {\n          this.setState(e.state);\n          this.fetchResults(e.state).catch(handleError);\n        };\n        this.fetchResults(this.state).catch(handleError);\n      });\n  }\n\n  componentWillUnmount() {\n    window.onpopstate = () => {};\n  }\n\n  handleQueryChange(queryChange) {\n    this.setState(queryChange);\n    const newState = { ...this.state, ...queryChange };\n    const request = {\n      model: newState.model,\n      fields: newState.fields,\n      filters: newState.filters,\n      ...empty,\n    };\n    window.history.pushState(\n      request,\n      null,\n      getUrlForQuery(this.props.config.baseUrl, newState, \"html\")\n    );\n    this.fetchResults(newState)\n      .then((response) => {\n        response = { ...response, ...empty };\n        assert.deepStrictEqual(response, request);\n      })\n      .catch(handleError);\n  }\n\n  render() {\n    if (this.state.booting) return \"\";\n    const query = new Query(\n      this.props.config,\n      this.state,\n      this.handleQueryChange.bind(this)\n    );\n    return (\n      <QueryPage\n        query={query}\n        sortedModels={this.props.config.sortedModels}\n        baseUrl={this.props.config.baseUrl}\n        {...this.state}\n      />\n    );\n  }\n}\n\nfunction Bob(props) {\n  const { model, fieldStr } = useParams();\n  return (\n    <QueryApp\n      {...props}\n      model={model}\n      fieldStr={fieldStr || \"\"}\n      queryStr={useLocation().search}\n    />\n  );\n}\n\nfunction App(props) {\n  const { baseUrl, sortedModels, canMakePublic } = props;\n  return (\n    <BrowserRouter basename={baseUrl}>\n      <div id=\"body\">\n        <Logo />\n        <Switch>\n          <Route path=\"/query/:model/:fieldStr?.html\">\n            <Bob config={props} {...{ sortedModels }} />\n          </Route>\n          <Route path=\"/views/:pk.html\">\n            <EditSavedView {...{ baseUrl, canMakePublic }} />\n          </Route>\n          <Route path=\"/\">\n            <HomePage {...{ sortedModels, baseUrl }} />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst config = JSON.parse(\n    document.getElementById(\"backend-config\").textContent\n);\nconst version = document.getElementById(\"backend-version\").textContent.trim();\n\nif (config.sentryDsn) {\n    Sentry.init({\n        dsn: config.sentryDsn,\n        release: version,\n        attachStacktrace: true,\n        maxValueLength: 10000,\n    });\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App {...config} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}